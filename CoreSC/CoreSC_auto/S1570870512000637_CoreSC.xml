<?xml version="1.0" ?><PAPER><mode2 hasDoc="yes" name="S1570870512000637.tmf1" version="elsevier"/>
<TITLE>Efficient and adaptive congestion control for heterogeneous delay-tolerant networks
</TITLE>
<ABSTRACT>

Abstract
<s sid="1"><CoreSc1 advantage="None" conceptID="Mot1" novelty="None" type="Mot"/><text>Detecting and dealing with congestion in delay-tolerant networks (DTNs) is an important and challenging problem.</text></s>
<s sid="2"><CoreSc1 advantage="None" conceptID="Mot2" novelty="None" type="Mot"/><text>Current DTN forwarding algorithms typically direct traffic towards more central nodes in order to maximise delivery ratios and minimise delays, but as traffic demands increase these nodes may become saturated and unusable.</text></s>
<s sid="3"><CoreSc1 advantage="None" conceptID="Obj1" novelty="None" type="Obj"/><text>We propose CafRep, an adaptive congestion aware protocol that detects and reacts to congested nodes and congested parts of the network by using implicit hybrid contact and resources congestion heuristics.</text></s>
<s sid="4"><CoreSc1 advantage="None" conceptID="Obj2" novelty="None" type="Obj"/><text>CafRep exploits localised relative utility based approach to offload the traffic from more to less congested parts of the network, and to replicate at adaptively lower rate in different parts of the network with non-uniform congestion levels.</text></s>
<s sid="5"><CoreSc1 advantage="None" conceptID="Obj3" novelty="None" type="Obj"/><text>We extensively evaluate our work against benchmark and competitive protocols across a range of metrics over three real connectivity and GPS traces such as Sassy [44], San Francisco Cabs [45] and Infocom 2006 [33].</text></s>
<s sid="6"><CoreSc1 advantage="None" conceptID="Obj4" novelty="None" type="Obj"/><text>We show that CafRep performs well, independent of network connectivity and mobility patterns, and consistently outperforms the state-of-the-art DTN forwarding algorithms in the face of increasing rates of congestion.</text></s>
<s sid="7"><CoreSc1 advantage="None" conceptID="Bac1" novelty="None" type="Bac"/><text>CafRep maintains higher availability and success ratios while keeping low delays, packet loss rates and delivery cost.</text></s>
<s sid="8"><CoreSc1 advantage="None" conceptID="Mot3" novelty="None" type="Mot"/><text>We test CafRep in the presence of two application scenarios, with fixed rate traffic and with real world Facebook application traffic demands, showing that regardless of the type of traffic CafRep aims to deliver, it reduces congestion and improves forwarding performance.</text></s>
</ABSTRACT>
<BODY>

Introduction
<s sid="9"><CoreSc1 advantage="None" conceptID="Mot4" novelty="None" type="Mot"/><text>Over the recent years the pervasiveness of mobile computing devices has increased significantly and the possibility of communication without an existing network infrastructure has become a reality.</text></s>
<s sid="10"><CoreSc1 advantage="None" conceptID="Met1" novelty="None" type="Met"/><text>Hsu and Helmy [18] showed that real world traces of different university campus wireless networks node encounters are sufficient to build a connected relationship graph that can be successfully used for data transmission despite the absence of contemporaneous end-to-end paths.</text></s>
<s sid="11"><CoreSc1 advantage="None" conceptID="Met2" novelty="None" type="Met"/><text>Routing in these networks is a challenging problem and has been primarily concerned with providing maximum throughput and minimal delays while typically assuming unlimited storage and transfer bandwidth i.e. using forwarding algorithms that greedily select best connected nodes as their next hop [14,28].</text></s>
<s sid="12"><CoreSc1 advantage="None" conceptID="Bac2" novelty="None" type="Bac"/><text>As mobile devices have limited resources, key nodes in the network quickly become congested and unusable and cause even more disconnections and even lower delivery rates.</text></s>
<s sid="13"><CoreSc1 advantage="None" conceptID="Bac3" novelty="None" type="Bac"/><text>Newly emerging work on congestion control in DTNs attempts to rectify this by proposing adaptive forwarding [14,31,15,30] or adaptive replication management [39,38,26,36,37] techniques.</text></s>
<s sid="14"><CoreSc1 advantage="None" conceptID="Bac4" novelty="None" type="Bac"/><text>In our earlier work we proposed an adaptive forwarding protocol, Caf√© [14,31,15,30], that diverts the load away from its conventional centrality-driven path by considering congestion heuristics that route the traffic away from the congesting areas.</text></s>
<s sid="15"><CoreSc1 advantage="None" conceptID="Res1" novelty="None" type="Res"/><text>This approach is particularly suitable to social opportunistic networks as they have been shown to exhibit the path explosion phenomenon [9].</text></s>
<s sid="16"><CoreSc1 advantage="None" conceptID="Res2" novelty="None" type="Res"/><text>The main drawback of adaptive forwarding is that it does not decrease the total level of traffic in the network but only redirects it.</text></s>
<s sid="17"><CoreSc1 advantage="None" conceptID="Res3" novelty="None" type="Res"/><text>This is suboptimal at times when finding alternative non-congested parts of the network is not possible.</text></s>
<s sid="18"><CoreSc1 advantage="None" conceptID="Res4" novelty="None" type="Res"/><text>Adaptive replication management techniques [39,38] can decrease the traffic in response to congestion, but they cannot adaptively offload the traffic from more congested to less congested parts of the network.</text></s>
<s sid="19"><CoreSc1 advantage="None" conceptID="Res5" novelty="None" type="Res"/><text>This means that they cannot efficiently deal with scenarios when congestion affects some regions of the network (e.g. hotspots, roadside units) and not the others.</text></s>
<s sid="20"><CoreSc1 advantage="None" conceptID="Obj5" novelty="None" type="Obj"/><text>In this work we propose to unify adaptive forwarding and adaptive replication into a common congestion control framework for DTNs (CafRep) that manages to both decrease the load on the network and offload the traffic to the parts of the network that are less congested.</text></s>
<s sid="21"><CoreSc1 advantage="None" conceptID="Obj6" novelty="None" type="Obj"/><text>We achieve this by using a local based implicit heuristic based on contact and resource statistics that extends our previous work on adaptive forwarding [10-12].</text></s>
<s sid="22"><CoreSc1 advantage="None" conceptID="Obj7" novelty="None" type="Obj"/><text>More specifically, we propose to dynamically combine three types of heuristics: node centrality and contact analysis driven heuristics that exploits contact relationships to allow optimal directionality and delivery probability of a node; node resource driven and ego network driven heuristics to adapt to the nodes and parts of the network's buffer availability, delays or congesting rates.</text></s>
<s sid="23"><CoreSc1 advantage="None" conceptID="Res6" novelty="None" type="Res"/><text>As a result, our new framework adaptively changes forwarding and replication behaviour to best manage tradeoffs across multiple contact and resource attributes of nodes in real network scenarios with different mobility, and connectivity patterns.</text></s>
<s sid="24"><CoreSc1 advantage="None" conceptID="Bac5" novelty="None" type="Bac"/><text>Previous work on resource aware DTN protocols has either focused on the homogeneous networks where the authors assumed nodes to have the same amount of resources on their devices [51] or looked at only one connectivity trace [15,39].</text></s>
<s sid="25"><CoreSc1 advantage="None" conceptID="Bac6" novelty="None" type="Bac"/><text>However, it is not realistic to assume network homogeneity as mobile devices can be used in different ways, move in different ways and do not consume their resources at the same rates.</text></s>
<s sid="26"><CoreSc1 advantage="None" conceptID="Goa1" novelty="None" type="Goa"/><text>In this paper we explore how a more intelligent resource aware model, reflective of the heterogeneity of devices' resources, and non-uniform connectivity patterns, and application demands can improve data delivery and dissemination in the network.</text></s>
<s sid="27"><CoreSc1 advantage="None" conceptID="Con1" novelty="None" type="Con"/><text>Section 2 discusses the lessons learned and shortcomings of DTN forwarding, replication, load distribution and congestion control approaches further, together with state of the art work from related areas such as MANET congestion control, resource pooling, Peer-to-Peer (P2P), as well as an algorithmic game theory perspective of selfish forwarding and routing.</text></s>
<s sid="28"><CoreSc1 advantage="None" conceptID="Con2" novelty="None" type="Con"/><text>Section 3 specifies the particular challenges in opportunistic delay-tolerant networks that prevent successful data delivery and identifies our criteria that guide our proposal for congestion control framework for adaptive replication and forwarding - CafRep.</text></s>
<s sid="29"><CoreSc1 advantage="None" conceptID="Obj8" novelty="None" type="Obj"/><text>We present an analytical model that identifies fundamental problems regarding traffic distribution and shortest path forwarding heuristics in relation to the traffic flow and the price of anarchy.</text></s>
<s sid="30"><CoreSc1 advantage="None" conceptID="Obj9" novelty="None" type="Obj"/><text>Modelling the behaviour of opportunistic networks is a challenging because of time varying network topology and congestion, and thus we integrate the concepts of a time varying networks [12,35] and dynamic flows [13].</text></s>
<s sid="31"><CoreSc1 advantage="None" conceptID="Obj10" novelty="None" type="Obj"/><text>We describe the design space of our proposal, give multi-layer architectural overview of our conceptual model and CafRep pseudo code.</text></s>
<s sid="32"><CoreSc1 advantage="None" conceptID="Obj11" novelty="None" type="Obj"/><text>We identify and describe the core congestion signals, heuristics and techniques that are at the core of our proposal and allow adaptive dissemination of messages throughout the network such that we address our criteria i.e. allow spreading the traffic across multiple paths whilst avoiding congested regions and minimising delays and network overheads.</text></s>
<s sid="33"><CoreSc1 advantage="None" conceptID="Obj12" novelty="None" type="Obj"/><text>We extend our previous work by discussing the impact of a number of different CafRep utility weighting schemes on the protocol performance over varying network topologies.</text></s>
<s sid="34"><CoreSc1 advantage="None" conceptID="Obj13" novelty="None" type="Obj"/><text>Section 4 describes our evaluation methodology.</text></s>
<s sid="35"><CoreSc1 advantage="None" conceptID="Mot5" novelty="None" type="Mot"/><text>As nodes' encounter patterns can greatly differ for social and vehicular networks, it is important to evaluate our CafRep protocol across different real traces from CRAWDAD [1] in order to gain better understanding of our protocol performance.</text></s>
<s sid="36"><CoreSc1 advantage="None" conceptID="Obj14" novelty="None" type="Obj"/><text>Section 4 begins by discussing the heterogeneity of the three chosen real connectivity and GPS traces.</text></s>
<s sid="37"><CoreSc1 advantage="None" conceptID="Obj15" novelty="None" type="Obj"/><text>We then motivate the use of two different application scenarios: publish subscribe podcasting and real Facebook application.</text></s>
<s sid="38"><CoreSc1 advantage="None" conceptID="Obj16" novelty="None" type="Obj"/><text>Section 5 discussed our extensive evaluation of CafRep against some of the major state of the art DTN protocols including a benchmark DTN forwarding algorithm Prophet [23], an adaptive forwarding algorithm Caf√© [31], a fixed replication algorithm Spray and Focus (SF) [37] and two adaptive replication algorithms Encounter Based Routing (EBR) [26] and Retiring Replicants (RRs) [38].</text></s>
<s sid="39"><CoreSc1 advantage="None" conceptID="Obj17" novelty="None" type="Obj"/><text>We consider seven different metrics for the performance analysis of the protocols including success ratio, delay, buffer availability, packet loss rates, number of forwarded and replicated packets, and delivery cost.</text></s>
<s sid="40"><CoreSc1 advantage="None" conceptID="Con3" novelty="None" type="Con"/><text>We show that our protocol outperforms all four other algorithms across majority of metrics across the three chosen heterogeneous traces that have different mobility and connectivity patterns.</text></s>
<s sid="41"><CoreSc1 advantage="None" conceptID="Res7" novelty="None" type="Res"/><text>We identify differences in protocols' performances across the different traces and discuss multiple reasons for causing that.</text></s>
<s sid="42"><CoreSc1 advantage="None" conceptID="Res8" novelty="None" type="Res"/><text>We briefly describe the results with the different Facebook traffic types that show that regardless of the type of traffic CafRep aims to deliver, it reduces congestion and improves forwarding performance in the network.</text></s>
<s sid="43"><CoreSc1 advantage="None" conceptID="Bac7" novelty="None" type="Bac"/><text>Section 6 concludes the work and presents the open questions for future work.</text></s>
Related work
<s sid="44"><CoreSc1 advantage="None" conceptID="Bac8" novelty="None" type="Bac"/><text>DTN forwarding, replication, load distribution and congestion control</text></s>
<s sid="45"><CoreSc1 advantage="None" conceptID="Bac9" novelty="None" type="Bac"/><text>This section discusses the most recent advances in message replication and forwarding for DTNs.</text></s>
<s sid="46"><CoreSc1 advantage="None" conceptID="Bac10" novelty="None" type="Bac"/><text>Early work in this area focuses primarily on the challenge of reducing the delivery latency and cost with the underlying assumption of unlimited transfer and storage capacity [40,23,17,8,36,37,25].</text></s>
<s sid="47"><CoreSc1 advantage="None" conceptID="Bac11" novelty="None" type="Bac"/><text>The majority of research in congestion control for DTNs is concerned with buffer management [6,22,24,34], but recent developments have been concerned with replication management [34,39,30] and distribution [26,28,15].</text></s>
<s sid="48"><CoreSc1 advantage="None" conceptID="Bac12" novelty="None" type="Bac"/><text>Encounter Based Routing (EBR) proposed in [26] is a quota based replication protocol that aims to forward more copies of a message to nodes that are better connected.</text></s>
<s sid="49"><CoreSc1 advantage="None" conceptID="Bac13" novelty="None" type="Bac"/><text>The introduction of limited resources and increasing traffic demands cause key components in the network to become congested, which in turn leads to messages being dropped.</text></s>
<s sid="50"><CoreSc1 advantage="None" conceptID="Met3" novelty="None" type="Met"/><text>Retiring Replicas (RRs) [38] is an adaptive replication protocol that adjusts a nodes' copy limit based on the locally perceived global level of congestion.</text></s>
<s sid="51"><CoreSc1 advantage="None" conceptID="Met4" novelty="None" type="Met"/><text>RR proposes the nodes to create their own congestion view (CV) as the ratio of drops and duplicate deliveries and compare it to the congestion threshold.</text></s>
<s sid="52"><CoreSc1 advantage="None" conceptID="Met5" novelty="None" type="Met"/><text>Depending on the comparison the copy limit for new messages is lowered or raised following a back-off algorithm.</text></s>
<s sid="53"><CoreSc1 advantage="None" conceptID="Bac14" novelty="None" type="Bac"/><text>This work assumes a uniform network with random waypoint mobility.</text></s>
<s sid="54"><CoreSc1 advantage="None" conceptID="Bac15" novelty="None" type="Bac"/><text>In reality the networks are likely to be non-uniform and the level of congestion may vary between different regions of the network.</text></s>
<s sid="55"><CoreSc1 advantage="None" conceptID="Bac16" novelty="None" type="Bac"/><text>This work has not proposed how the network adjustments would compensate for differing local conditions.</text></s>
<s sid="56"><CoreSc1 advantage="None" conceptID="Obj18" novelty="None" type="Obj"/><text>In Cafe [15] we proposed and examined several combined social and resources heuristics in order to detect congested parts of the network and move the traffic away towards less congested parts.</text></s>
<s sid="57"><CoreSc1 advantage="None" conceptID="Res9" novelty="None" type="Res"/><text>These heuristics include social, delay and buffer metric of nodes and their ego networks.</text></s>
<s sid="58"><CoreSc1 advantage="None" conceptID="Res10" novelty="None" type="Res"/><text>The total combined utility function we propose is at the core of our adaptive forwarding protocol that is dynamic and flexible as it operates as a pure social (contact driven) protocol at times of low congestion but is highly resource driven at times of high congestion.</text></s>
<s sid="59"><CoreSc1 advantage="None" conceptID="Res11" novelty="None" type="Res"/><text>We show that our single copy adaptive forwarding protocol achieves better performance in comparison to multi-copy protocols such as spray and wait (SW) [36], Spray and Focus (SF) [37], Prophet [20] and epidemic protocols in terms of decreased delays, higher availability of nodes and higher success ratios.</text></s>
<s sid="60"><CoreSc1 advantage="None" conceptID="Res12" novelty="None" type="Res"/><text>In [30] we built an interest-driven P2P content dissemination overlay on the top of our congestion aware forwarding protocol.</text></s>
<s sid="61"><CoreSc1 advantage="None" conceptID="Res13" novelty="None" type="Res"/><text>Both caching and forwarding policies are decided based on the interest, availability, social closeness and numbers of interested nodes.</text></s>
<s sid="62"><CoreSc1 advantage="None" conceptID="Res14" novelty="None" type="Res"/><text>Our results show that our adaptive overlay manages to maintain high success ratio of answered queries, high availability of intermediary nodes and short download times for a P2P file casting application running in the face of increasing number of file publishers and topic popularity.</text></s>
<s sid="63"><CoreSc1 advantage="None" conceptID="Met6" novelty="None" type="Met"/><text>FairRoute [28] argues that considering only contact histories to define contact duration, frequency and interaction strength cannot achieve balanced traffic distribution.</text></s>
<s sid="64"><CoreSc1 advantage="None" conceptID="Met7" novelty="None" type="Met"/><text>FairRoute proposes nodes queue length to be evaluated in order to allow nodes to only forward to contacts with a bigger queue size, but this does not avoid congesting popular nodes and leads to packets being dropped.</text></s>
<s sid="65"><CoreSc1 advantage="None" conceptID="Met8" novelty="None" type="Met"/><text>Storage Routing (SR) [34] avoids congested nodes dropping packets by sending a set of messages out to neighbours with available storage, when buffer capacity is free these are retrieved.</text></s>
<s sid="66"><CoreSc1 advantage="None" conceptID="Met9" novelty="None" type="Met"/><text>This protocol only temporarily alleviates congestion as it relies on contacts that are present not suffering from congestion themselves.</text></s>
<s sid="67"><CoreSc1 advantage="None" conceptID="Goa2" novelty="None" type="Goa"/><text>Autonomous Congestion Control (ACC) [6] implements congestion control by apply a financial model to buffer space management, in order to propagate buffer utilisation stress backwards through the network to the source nodes.</text></s>
<s sid="68"><CoreSc1 advantage="None" conceptID="Goa3" novelty="None" type="Goa"/><text>This work does not overcome intermediary/source nodes filling their own buffers and isolating peripheral nodes.</text></s>
<s sid="69"><CoreSc1 advantage="None" conceptID="Obj19" novelty="None" type="Obj"/><text>[38] propose DA-SW (Density-Aware Spray-and-Wait), that is a measurement-oriented variant of the spray-and-wait [36] algorithm that dynamically determines the number of a messages disseminated in the network in order to achieve constant delay.</text></s>
<s sid="70"><CoreSc1 advantage="None" conceptID="Obj20" novelty="None" type="Obj"/><text>DA-SW relies on the current average node degree in the roller tour.</text></s>
<s sid="71"><CoreSc1 advantage="None" conceptID="Obj21" novelty="None" type="Obj"/><text>Whenever a node has a bundle to transmit, it computes its current connectivity degree and refers to the abacus to determine the exact number of copies that is expected to lead to some expected delay.</text></s>
<s sid="72"><CoreSc1 advantage="None" conceptID="Obj22" novelty="None" type="Obj"/><text>The authors did not address the impact of their static measurement window (30s) on the performance of their system.</text></s>
<s sid="73"><CoreSc1 advantage="None" conceptID="Obj23" novelty="None" type="Obj"/><text>This work does not consider dealing with resource constraints such as node buffers, bandwidth and energy consumption.</text></s>
Resource pooling
<s sid="74"><CoreSc1 advantage="None" conceptID="Obj24" novelty="None" type="Obj"/><text>[42] believe that the natural evolution of the Internet should be to harness multipath-capable end systems in order to achieve resource pooling.</text></s>
<s sid="75"><CoreSc1 advantage="None" conceptID="Res15" novelty="None" type="Res"/><text>[9] show that opportunistic networks typically exhibit the path explosion phenomenon.</text></s>
<s sid="76"><CoreSc1 advantage="None" conceptID="Res16" novelty="None" type="Res"/><text>In our work, the nodes benefit from pooling the capacity of their many and varied contacts, making effective use of the network resources available to them.</text></s>
<s sid="77"><CoreSc1 advantage="None" conceptID="Res17" novelty="None" type="Res"/><text>If traffic is spread across the resources of a node's many and varied contacts in the right way, with the right reaction to the right congestion signals from the network, then traffic can quickly move away from congested regions.</text></s>
Peer-to-peer replication strategies
<s sid="78"><CoreSc1 advantage="None" conceptID="Res18" novelty="None" type="Res"/><text>We observe the similarities between content dissemination in opportunistic networks and in the related field of peer-to-peer (P2P) content dissemination and storage systems.</text></s>
<s sid="79"><CoreSc1 advantage="None" conceptID="Con4" novelty="None" type="Con"/><text>Although P2P networks operate in the application level we believe lessons can be learned from the work in this area.</text></s>
<s sid="80"><CoreSc1 advantage="None" conceptID="Goa4" novelty="None" type="Goa"/><text>In applications such as BitTorrent, peers replicate each other's data in order to increase data availability [32], also resulting in the pooling of the upload capacity of many network nodes [42].</text></s>
<s sid="81"><CoreSc1 advantage="None" conceptID="Goa5" novelty="None" type="Goa"/><text>[32] studied the problem of replica placement in a P2P system intending to optimise availability and/or the number of replicas.</text></s>
<s sid="82"><CoreSc1 advantage="None" conceptID="Con5" novelty="None" type="Con"/><text>[32] show that centralised control of resource placement is a NP-hard problem and that if the control is fully decentralised the peers selfishness can greatly alter the results leading to performance inequities that can render the system unreliable and thus ultimately unusable [32,29].</text></s>
<s sid="83"><CoreSc1 advantage="None" conceptID="Met10" novelty="None" type="Met"/><text>The most common approach to P2P replication is the random distribution of copies [7,5].</text></s>
<s sid="84"><CoreSc1 advantage="None" conceptID="Met11" novelty="None" type="Met"/><text>[4] analyse how many randomly placed replicas are required to achieve a desired level of availability.</text></s>
<s sid="85"><CoreSc1 advantage="None" conceptID="Met12" novelty="None" type="Met"/><text>[32] argue that replication should not be random, but be based on cliques of peers replicating each other's data, limiting the selfishness of the participants.</text></s>
<s sid="86"><CoreSc1 advantage="None" conceptID="Obj25" novelty="None" type="Obj"/><text>Table 1 presents a summary of the techniques discussed in this section in terms of seven criteria.</text></s>
<s sid="87"><CoreSc1 advantage="None" conceptID="Mot6" novelty="None" type="Mot"/><text>Note that none of the existing approaches have support for adaptive forwarding and replication, fully localised, social and resource aware congestion control in DTNs.</text></s>
<s sid="88"><CoreSc1 advantage="None" conceptID="Mot7" novelty="None" type="Mot"/><text>Congestion aware forwarding and replication for DTNs</text></s>
Challenges
<s sid="89"><CoreSc1 advantage="None" conceptID="Mot8" novelty="None" type="Mot"/><text>Varying mobility patterns, topology changes, disconnections and resource restrictions pose many challenges for the design and implementation of congestion aware data transmission in DTNs.</text></s>
<s sid="90"><CoreSc1 advantage="None" conceptID="Goa6" novelty="None" type="Goa"/><text>This section systematically outlines particular challenges that motivate our criteria described in Section 3.2 that guide our proposal.</text></s>
Distributed decisions
<s sid="91"><CoreSc1 advantage="None" conceptID="Con6" novelty="None" type="Con"/><text>The limited connectivity and fragmented nature of opportunistic networks mean that it is neither efficient to obtain and maintain a global level of knowledge of the network nor to rely on closed-loop (acknowledgement based) techniques for any decisions.</text></s>
<s sid="92"><CoreSc1 advantage="None" conceptID="Goa7" novelty="None" type="Goa"/><text>We aim to allow each device in the DTN network to act independently and base their decisions on the limited localised knowledge with the aim to enable better performance of the whole network.</text></s>
Limited resources
<s sid="93"><CoreSc1 advantage="None" conceptID="Bac17" novelty="None" type="Bac"/><text>As buffer capacity, transfer bandwidth and battery life are limited, the messages can only be transferred successfully if the efficient coordination between the devices competing for resources is provided.</text></s>
<s sid="94"><CoreSc1 advantage="None" conceptID="Bac18" novelty="None" type="Bac"/><text>Network density and localised surges in traffic</text></s>
<s sid="95"><CoreSc1 advantage="None" conceptID="Bac19" novelty="None" type="Bac"/><text>Node connectivity in DTNs is sporadic and islands of connectivity may range in size, from sparse to dense.</text></s>
<s sid="96"><CoreSc1 advantage="None" conceptID="Bac20" novelty="None" type="Bac"/><text>Sparse networks present limited forwarding options at any given time, while dense networks are prone to suffering from transmission collisions due to wireless interference.</text></s>
<s sid="97"><CoreSc1 advantage="None" conceptID="Goa8" novelty="None" type="Goa"/><text>We aim to propose a protocol that could work well across these highly different network scenarios.</text></s>
Criteria
<s sid="98"><CoreSc1 advantage="None" conceptID="Goa9" novelty="None" type="Goa"/><text>In response to the challenges described in Section 3.1, we focus on the following research question:</text></s>
<s sid="99"><CoreSc1 advantage="None" conceptID="Goa10" novelty="None" type="Goa"/><text>How can disconnection prone nodes with different mobility and connectivity patterns and with limited resources, communicate in an efficient, adaptive and robust manner when there are a large number of data sources and destinations?</text></s>
<s sid="100"><CoreSc1 advantage="None" conceptID="Goa11" novelty="None" type="Goa"/><text>We address this question by identifying the following criteria that guide our proposal.</text></s>
Efficiency
<s sid="101"><CoreSc1 advantage="None" conceptID="Res19" novelty="None" type="Res"/><text>We define efficiency in terms of providing support for minimising the traffic latency and optimising utilisation of network resources.</text></s>
<s sid="102"><CoreSc1 advantage="None" conceptID="Res20" novelty="None" type="Res"/><text>More specifically, for DTN forwarding algorithms traffic latency is a key concern, as the freshness of data is important and it is persistently challenged by disconnections and congestion of intermediaries that prevent efficient store-carry-and-forward routing.</text></s>
<s sid="103"><CoreSc1 advantage="None" conceptID="Res21" novelty="None" type="Res"/><text>Similarly, DTN forwarding algorithms identify a subset of better connected nodes to which they forward the majority of the traffic.</text></s>
<s sid="104"><CoreSc1 advantage="None" conceptID="Res22" novelty="None" type="Res"/><text>As these nodes become overloaded, forwarding to a lower ranked node may lead to more even spread of the network load in the network and lower congestion rates, but also to increased number of intermediaries for the forwarded messages.</text></s>
<s sid="105"><CoreSc1 advantage="None" conceptID="Goa12" novelty="None" type="Goa"/><text>We aim to provide a mechanism that manages to dynamically balance more even utilisation of network nodes while keeping the traffic delays and number of forwarded packets low.</text></s>
Adaptation
<s sid="106"><CoreSc1 advantage="None" conceptID="Goa13" novelty="None" type="Goa"/><text>DTN nodes typically have self organised fully distributed behaviour which means that they base their decisions on the knowledge gathered in their local environment.</text></s>
<s sid="107"><CoreSc1 advantage="None" conceptID="Goa14" novelty="None" type="Goa"/><text>As we aim to optimise network wide behaviour based on nodes localised decisions, the question of how the individual nodes can get the feedback about the remote network state and affect it becomes highly challenging.</text></s>
<s sid="108"><CoreSc1 advantage="None" conceptID="Goa15" novelty="None" type="Goa"/><text>We aim to provide an adaptive mechanism that achieves network-wide optimisations by only fully relying on localised node aggregate heuristics and multi-dimensional metrics.</text></s>
Robustness
<s sid="109"><CoreSc1 advantage="None" conceptID="Goa16" novelty="None" type="Goa"/><text>We define robustness in terms of providing increased packet resiliency and collaboration between the nodes.</text></s>
<s sid="110"><CoreSc1 advantage="None" conceptID="Goa17" novelty="None" type="Goa"/><text>More specifically, due to nodes limited battery resources and high mobility, our aim is to investigate strategies for ensuring that the effect of dropped packets is minimal on the final delivery rates.</text></s>
<s sid="111"><CoreSc1 advantage="None" conceptID="Con7" novelty="None" type="Con"/><text>As the closed-loop acknowledgement-based loss recovery is ineffective in DTN environments, we look into packet replication techniques that can help with this.</text></s>
<s sid="112"><CoreSc1 advantage="None" conceptID="Con8" novelty="None" type="Con"/><text>Similarly, in order to avoid greedy localised node-only behaviour that leads to decreased intermediary resources and lower network-wide performance, we aim to provide a mechanism that carefully balances opportunistic usage of intermediary resources and cooperative behaviour that leads to improved end to end delivery rates.</text></s>
Analytical model
<s sid="113"><CoreSc1 advantage="None" conceptID="Obj26" novelty="None" type="Obj"/><text>We model the network as a temporal graph G=(V,E) because the connectivity of the network E and the state of the nodes V change over time.</text></s>
<s sid="114"><CoreSc1 advantage="None" conceptID="Mod1" novelty="None" type="Mod"/><text>We model each of these as time series and depict the vertices as V={Vt: t‚ààT} and the edges as E={Et: t‚ààT}, where t is a member of the time series T.</text></s>
<s sid="115"><CoreSc1 advantage="None" conceptID="Mod2" novelty="None" type="Mod"/><text>We assume that connectivity is bidirectional and therefore the edges of the graph are undirected, the edge connecting nodes u,v‚ààVt we denote as {u,v}‚ààEt.</text></s>
<s sid="116"><CoreSc1 advantage="None" conceptID="Mod3" novelty="None" type="Mod"/><text>The traditional representation of a path in a graph that is commonly used to depict the route that a message is transmitted along is an alternating sequence of vertices and edges.</text></s>
<s sid="117"><CoreSc1 advantage="None" conceptID="Mod4" novelty="None" type="Mod"/><text>In this work we model a path as a sequence of resource locations a message occupies, where each index represents a particular time interval e.g.</text></s>
P=(x0,x0,e1,x1,‚Ä¶,ek,xk) where ei={xi-1,xi}.
<s sid="118"><CoreSc1 advantage="None" conceptID="Mod5" novelty="None" type="Mod"/><text>Intuitively the best route is the path with the smallest resource cost, i.e. the path with the minimum number of transfers and shortest storage time.</text></s>
<s sid="119"><CoreSc1 advantage="None" conceptID="Bac21" novelty="None" type="Bac"/><text>Each second a message occupies storage or transfer bandwidth it adds cost to a network resource, and it can be more efficient for messages to travel via a greater number of hops with smaller in-network delays in order to arrive at the destination, rather than to be kept in storage waiting for a high demand resource to become available adding to the messages latency.</text></s>
<s sid="120"><CoreSc1 advantage="None" conceptID="Goa18" novelty="None" type="Goa"/><text>We aim to carefully manage the trade-off between increasing the storage occupation and increasing the hop count.</text></s>
<s sid="121"><CoreSc1 advantage="None" conceptID="Mod6" novelty="None" type="Mod"/><text>Using alternative paths is particularly suitable for social DTNs due to the path explosion phenomenon [9].</text></s>
<s sid="122"><CoreSc1 advantage="None" conceptID="Mod7" novelty="None" type="Mod"/><text>The demand of a resource is dependent on the set of forwarding demands.</text></s>
<s sid="123"><CoreSc1 advantage="None" conceptID="Mod8" novelty="None" type="Mod"/><text>The amount of demand for a resource X at a time t is given by: DXt=‚àëS‚â†X‚ààV‚àëD‚â†X‚ààVFSDt(X)where FSDt(X) denotes the number of paths between source node S and destination D that contains the resource X at time t.</text></s>
<s sid="124"><CoreSc1 advantage="None" conceptID="Mod9" novelty="None" type="Mod"/><text>Which paths contain X is influenced by the effects of the forwarding strategy.</text></s>
<s sid="125"><CoreSc1 advantage="None" conceptID="Mod10" novelty="None" type="Mod"/><text>Each resource X in the network can have a different stress level at any given time t as a result we denote stress as STxt=DxtCx which is a measure of demand DXt of a resource X at a given time t against the capacity for that resource CX.</text></s>
<s sid="126"><CoreSc1 advantage="None" conceptID="Mod11" novelty="None" type="Mod"/><text>Packet loss occurs when DXt&gt;CX i.e. the level of demand Dxt of a resource X at a given time t is greater than the resource capacity CX.</text></s>
<s sid="127"><CoreSc1 advantage="None" conceptID="Res23" novelty="None" type="Res"/><text>The total cost of delivering a single copy of a message is the sum of all storage and transmission occurrences in the lifetime of a given message along a path between the source and the destination.</text></s>
<s sid="128"><CoreSc1 advantage="None" conceptID="Res24" novelty="None" type="Res"/><text>As messages can be replicated, one or more copies of the message are transmitted, each following an independent path.</text></s>
<s sid="129"><CoreSc1 advantage="None" conceptID="Res25" novelty="None" type="Res"/><text>The number of paths is limited by a replication limit (M) and the cost of delivery for a replicated message is the sum of all path costs in the replication path set.</text></s>
<s sid="130"><CoreSc1 advantage="None" conceptID="Obj27" novelty="None" type="Obj"/><text>In order to impartially evaluate the inherent load distribution of a network we observe the stress effects of a uniformly non-biased forwarding strategy that selects the next hop randomly.</text></s>
<s sid="131"><CoreSc1 advantage="None" conceptID="Obj28" novelty="None" type="Obj"/><text>The result of selecting the next hop randomly is congruent with a random walk and therefore nodes that are better connected are more likely to receive messages.</text></s>
<s sid="132"><CoreSc1 advantage="None" conceptID="Obj29" novelty="None" type="Obj"/><text>Forwarding based on a heuristic which favours a node because of its connectivity puts well connected nodes in even greater demand than when simply randomly selected.</text></s>
<s sid="133"><CoreSc1 advantage="None" conceptID="Bac22" novelty="None" type="Bac"/><text>Connectivity observations such as: how recently a node has encountered the destination, the duration of connectivity a node has experienced with the destination, how frequently a node encounters the destination and a nodes betweenness or degree centrality are each used as heuristics within forwarding strategies.</text></s>
<s sid="134"><CoreSc1 advantage="None" conceptID="Bac23" novelty="None" type="Bac"/><text>The better the node is connected the greater the probability it has of fulfilling the criteria of this type of forwarding strategy.</text></s>
<s sid="135"><CoreSc1 advantage="None" conceptID="Met13" novelty="None" type="Met"/><text>Forwarding based on connectivity is a method of seeking the shortest path.</text></s>
<s sid="136"><CoreSc1 advantage="None" conceptID="Res26" novelty="None" type="Res"/><text>Shortest path routing is greedy and it can be the best solution in a network with no opposing traffic.</text></s>
<s sid="137"><CoreSc1 advantage="None" conceptID="Res27" novelty="None" type="Res"/><text>However, this is not realistic because it assumes no delay.</text></s>
<s sid="138"><CoreSc1 advantage="None" conceptID="Mod12" novelty="None" type="Mod"/><text>Delay is relative to the level of congestion experienced by a resource X at a given time t, and is a measurement of the current demand D and buffered demand B over the number of available outlets for the resource X at a given time divided by the degree centrality of the node X at time t dt(X) which can be denoted as delayt(X)=DXt+Œ£m‚ààBtdt(X).</text></s>
<s sid="139"><CoreSc1 advantage="None" conceptID="Mod13" novelty="None" type="Mod"/><text>We define resource consumption as subgraph G‚Ä≤=(V‚Ä≤,E‚Ä≤) where the set of vertices are defined as the set of vertices that have a demand greater than 0 V‚Ä≤=‚àÄvt‚ààV:Dvt&gt;0 and the set of edges is defined as the set of edges that have a demand greater than 0 E‚Ä≤={‚àÄet‚ààE:Det&gt;0}.</text></s>
<s sid="140"><CoreSc1 advantage="None" conceptID="Mod14" novelty="None" type="Mod"/><text>Network utilisation can be measured as difference between the available resources G and the consumed resources G‚Ä≤ depicted as U=|G‚Ä≤|+‚ÄñG‚Ä≤‚Äñ|G|+‚ÄñG‚Äñ where |G| and |G‚Ä≤| denote the size of the set of vertexes for G and G‚Ä≤, and ||G|| and ||G‚Ä≤|| denote the size of the set of edges for G and G‚Ä≤.</text></s>
<s sid="141"><CoreSc1 advantage="None" conceptID="Mod15" novelty="None" type="Mod"/><text>The relationship between F and G is constrained such that 0‚©ΩU‚©ΩCG where CG is the total capacity of the graph.</text></s>
<s sid="142"><CoreSc1 advantage="None" conceptID="Res28" novelty="None" type="Res"/><text>The forwarding criteria H influences the size of F (the number of paths that wish to use these resources) based on its utilisation of G.</text></s>
<s sid="143"><CoreSc1 advantage="None" conceptID="Res29" novelty="None" type="Res"/><text>Given two forwarding criteria H and H‚Ä≤ each utilising the network to the value of U and U‚Ä≤ respectively, H has a greater capacity than H‚Ä≤ if U&gt;U‚Ä≤.</text></s>
<s sid="144"><CoreSc1 advantage="None" conceptID="Con9" novelty="None" type="Con"/><text>H is therefore more effective as F can utilise more of the elements of G.</text></s>
<s sid="145"><CoreSc1 advantage="None" conceptID="Con10" novelty="None" type="Con"/><text>Existing DTN forwarding algorithms direct traffic towards the most desirable next-hop nodes as this is the optimal solution when the network is free.</text></s>
<s sid="146"><CoreSc1 advantage="None" conceptID="Con11" novelty="None" type="Con"/><text>When the traffic demands increase, these nodes become inundated and this is made even more challenging as the flow of traffic is unpredictable and has a tendency to accumulate in some regions of the network [2] shows that the price of anarchy is unbounded if the optimal forwarding solution is based purely on minimising delay in a flow-independent model, but that this can be improved by forwarding based on how congested the resource is in addition to the delay cost, resulting in the price of anarchy being at most 4/3 provided the cost functions are all linear or d/logd if the cost functions are polynomials.</text></s>
<s sid="147"><CoreSc1 advantage="None" conceptID="Con12" novelty="None" type="Con"/><text>Design space and multi-layer overview of CafRep</text></s>
<s sid="148"><CoreSc1 advantage="None" conceptID="Con13" novelty="None" type="Con"/><text>We briefly describe the design space for CafRep and show different dimensions of possible approaches that can be useful for congestion aware dissemination in DTNs in Fig. 1.</text></s>
<s sid="149"><CoreSc1 advantage="None" conceptID="Con14" novelty="None" type="Con"/><text>The vertical axis represents the Direction Influence that refers to the connectivity dimension such as centrality, similarity, interaction strength and other social contexts that identify affiliation such as clique identification and delivery probability used to influence the social forwarding decisions.</text></s>
<s sid="150"><CoreSc1 advantage="None" conceptID="Res30" novelty="None" type="Res"/><text>The two horizontal axes represent the resource dimensions.</text></s>
<s sid="151"><CoreSc1 advantage="None" conceptID="Res31" novelty="None" type="Res"/><text>The multi-path transport approach, such as Caf√© [14,31,15,30], introduces methods of avoiding congested regions of the network.</text></s>
<s sid="152"><CoreSc1 advantage="None" conceptID="Con15" novelty="None" type="Con"/><text>The replication restriction technique, such as Retiring Replicants [38], helps to increase network capacity by reducing the in-network occupancy of redundant messages.</text></s>
<s sid="153"><CoreSc1 advantage="None" conceptID="Con16" novelty="None" type="Con"/><text>Our CafRep's design philosophy is to consider the combination of route optimisation with multi-path transport, sending rate restriction and social connectivity.</text></s>
<s sid="154"><CoreSc1 advantage="None" conceptID="Obs1" novelty="None" type="Obs"/><text>CafRep takes a multi-layered approach that is illustrated in Fig. 2.</text></s>
<s sid="155"><CoreSc1 advantage="None" conceptID="Obs2" novelty="None" type="Obs"/><text>The edges in the graph on the Network Layer illustrate connectivity and the vertices represent the nodes.</text></s>
<s sid="156"><CoreSc1 advantage="None" conceptID="Obj30" novelty="None" type="Obj"/><text>In reality the connections go up and down over a period of time and the network can get disconnected for the majority of time, but for simplicity the time series information has been flattened.</text></s>
<s sid="157"><CoreSc1 advantage="None" conceptID="Obj31" novelty="None" type="Obj"/><text>We assume the following: source node and destination node belong to the same interest group, multiple paths exist between the two nodes and the socially optimal route is also the most congested path.</text></s>
<s sid="158"><CoreSc1 advantage="None" conceptID="Obj32" novelty="None" type="Obj"/><text>The Interest Layer, a part of the Application Layer, maps users into areas of interest as each application can have its own topics and interest groups.</text></s>
<s sid="159"><CoreSc1 advantage="None" conceptID="Obj33" novelty="None" type="Obj"/><text>CafRep Layer combines Congestion Layer and Social Layer in order to broaden the next hop selection criteria allowing nodes with capacity, or less direct routes, to receive messages by monitoring both social and congestion signals and dynamically balancing between them.</text></s>
<s sid="160"><CoreSc1 advantage="None" conceptID="Res32" novelty="None" type="Res"/><text>The Network Layer, on the Physical Layer, illustrates the actual route a message would take through this example network, given the trade-off between shortest path and resource-driven routing, in order to redistribute load to avoid congestion as identified in our criteria.</text></s>
<s sid="161"><CoreSc1 advantage="None" conceptID="Res33" novelty="None" type="Res"/><text>Congestion aware forwarding and replication: CafRep</text></s>
CafRep design overview
<s sid="162"><CoreSc1 advantage="None" conceptID="Res34" novelty="None" type="Res"/><text>We describe unified adaptive forwarding and adaptive replication management approach into a common congestion control framework for DTN routing, CafRep (Congestion Aware Forwarding and Replication).</text></s>
<s sid="163"><CoreSc1 advantage="None" conceptID="Res35" novelty="None" type="Res"/><text>CafRep works as a local adaptive forwarding and replication protocol that diverts the load from its conventional social aware path at times of congestion and directs it via a different path that decreases the load of hotspots and end-to-end delays while keeping high success ratios.</text></s>
<s sid="164"><CoreSc1 advantage="None" conceptID="Con17" novelty="None" type="Con"/><text>It dynamically combines three types of implicit congestion heuristics: social (contact) driven heuristics that exploits contact relationships among nodes to allow optimal directionality and delivery probability of a node; node resource driven heuristics that aim to adopt to the nodes' buffer availability, delays and congesting rates; and ego network (regional) driven heuristics that aim to detect and adapt buffer availability, delays and congesting rates of different parts of the network.</text></s>
<s sid="165"><CoreSc1 advantage="None" conceptID="Con18" novelty="None" type="Con"/><text>Selecting the node that represents the best carrier for the message and deciding on the optimal number of replicas to forward are both multiple attribute decision problems across multiple measures, where the aim is to select the node and number of messages that provide the maximum utility for carrying a certain number of messages.</text></s>
<s sid="166"><CoreSc1 advantage="None" conceptID="Obj34" novelty="None" type="Obj"/><text>To achieve this we propose CafRepUtilD heuristic (Formula (1)) that is responsible for determining the overall improvement an encountered node represents when compared to the sending node, and deciding on which nodes will be selected as next hop and how many copies of the message are to be disseminated.</text></s>
<s sid="167"><CoreSc1 advantage="None" conceptID="Mod16" novelty="None" type="Mod"/><text>Formula (1) shows the CafRepUtilD utility calculation node (X) uses when forwarding a message towards a destination (D) in order to evaluate each encountered node (i) within its contact set (C) as the sum of the set of carefully selected equally weighted utilities of different congestion heuristics:(1)CafRepUtilD(X)=‚àëh‚ààHUtilh(X)</text></s>
<s sid="168"><CoreSc1 advantage="None" conceptID="Res36" novelty="None" type="Res"/><text>CafRepUtil gets calculated for all contacts of the sending node (node X) and selects the best next hop as the node with the highest CafRepUtil value if its CafRepUtil is higher than the sending node's.</text></s>
<s sid="169"><CoreSc1 advantage="None" conceptID="Res37" novelty="None" type="Res"/><text>The number of messages to be sent to it is decided by Formula (2).</text></s>
<s sid="170"><CoreSc1 advantage="None" conceptID="Res38" novelty="None" type="Res"/><text>If node X has more than one copy of the message ReplRate shows how the number of copies can be divided between the two nodes.</text></s>
<s sid="171"><CoreSc1 advantage="None" conceptID="Mod17" novelty="None" type="Mod"/><text>This division is dependent on the CafRepUtil utility value of each node; therefore, the division of the replication rate for the destination d between node X and node C(X) is given by Formula (2) where M is the number of replicas of a message m at node X.(2)ReplRateD(X)=M¬∑CafRepUtilD(C(X))CafRepUtilD(X)+CafRepUtilD(C(X))</text></s>
<s sid="172"><CoreSc1 advantage="None" conceptID="Res39" novelty="None" type="Res"/><text>There are seven non-trivial heuristics h(X) that cover different dimensions of the problem and when combined they allow managing a number of trade-offs between different challenges we identified in Section 3.</text></s>
<s sid="173"><CoreSc1 advantage="None" conceptID="Res40" novelty="None" type="Res"/><text>For each of the heuristics we define their respective utilities as measurements of their relative gain, loss or equality, calculated as pair-wise comparison between the node's own congestion heuristics and that of the encountered contacts.</text></s>
<s sid="174"><CoreSc1 advantage="None" conceptID="Obj35" novelty="None" type="Obj"/><text>More specifically, we use a pair-wise comparison matrix on the normalised relative weights of the social and resources heuristics of nodes and their ego networks in the following way.(3)Utilh(X)=h(C(X))h(X)+h(C(X))</text></s>
<s sid="175"><CoreSc1 advantage="None" conceptID="Obj36" novelty="None" type="Obj"/><text>The set of our selected congestion heuristics includes: node retentiveness (Ret), node receptiveness (Rec), node congesting rate (CR), and their weighted ego-network counterparts (WENRet,WENRec,WENCR), along with a node social heuristic (Social), and is given in Formula (4).</text></s>
<s sid="176"><CoreSc1 advantage="None" conceptID="Obj37" novelty="None" type="Obj"/><text>In this paper, we use SimBetTS as our social heuristic that was introduced in [8].(4)h‚ààH={Ret,Rec,CR,Social,WENRet,WENRec,WENCR}</text></s>
<s sid="177"><CoreSc1 advantage="None" conceptID="Obj38" novelty="None" type="Obj"/><text>Before we move to describing CafRep algorithm in a greater detail we briefly describe the congestion heuristics used in CafRep for completeness purposes.</text></s>
<s sid="178"><CoreSc1 advantage="None" conceptID="Res41" novelty="None" type="Res"/><text>More detailed description of these heuristics is given in [31,48].</text></s>
<s sid="179"><CoreSc1 advantage="None" conceptID="Res42" novelty="None" type="Res"/><text>Retentiveness (Ret) refers to the node's available storage for the new packets that are sent to them.</text></s>
<s sid="180"><CoreSc1 advantage="None" conceptID="Con19" novelty="None" type="Con"/><text>Retentiveness is an important attribute to consider because of the store and forward nature of opportunistic DTN networks.</text></s>
<s sid="181"><CoreSc1 advantage="None" conceptID="Con20" novelty="None" type="Con"/><text>Nodes with limited storage, either due to popularity or simply due to more limited hardware constraints, are more susceptible to packet loss.</text></s>
<s sid="182"><CoreSc1 advantage="None" conceptID="Met14" novelty="None" type="Met"/><text>Retentiveness is calculated as an exponentially weighted moving average of a node's remaining storage.</text></s>
<s sid="183"><CoreSc1 advantage="None" conceptID="Mod18" novelty="None" type="Mod"/><text>Formula (5) shows retentiveness of X is calculated as the sum of all message occupancy subtracted from the node's buffer capacity (Bc(X)).(5)Ret(X)=Bc(X)-‚àëi=1Nmsizei(X)</text></s>
<s sid="184"><CoreSc1 advantage="None" conceptID="Res43" novelty="None" type="Res"/><text>Receptiveness (Rec) refers to the node's ability to receive packets and forward them on.</text></s>
<s sid="185"><CoreSc1 advantage="None" conceptID="Res44" novelty="None" type="Res"/><text>This is an important observation as increasing in-network delays is an indication that the volume of traffic a node or region is receiving is greater than the bandwidth available to it for offloading.</text></s>
<s sid="186"><CoreSc1 advantage="None" conceptID="Res45" novelty="None" type="Res"/><text>The total current message delay is calculated as the sum of the difference between the time each message in a node's buffer was received and the current time.</text></s>
<s sid="187"><CoreSc1 advantage="None" conceptID="Res46" novelty="None" type="Res"/><text>The delay between receiving a message and forwarding a message is constrained by the size of the buffer and the bandwidth available for a node to offload the messages.</text></s>
<s sid="188"><CoreSc1 advantage="None" conceptID="Res47" novelty="None" type="Res"/><text>Nodes with large amounts of storage are more susceptible to receiving more messages than they are capable of offloading.</text></s>
<s sid="189"><CoreSc1 advantage="None" conceptID="Res48" novelty="None" type="Res"/><text>Formula (6) shows receptiveness is the total current message delay, calculated as the sum of differences between the current time (Tnow) and the time each message was received (Mreceived).(6)Rec(X)=‚àëi=1N(Tnow-mreceivedi(X))</text></s>
<s sid="190"><CoreSc1 advantage="None" conceptID="Res49" novelty="None" type="Res"/><text>Congesting rate (CR) refers to a measure of how fast a node is likely to congest, an important observation as it indicates stability.</text></s>
<s sid="191"><CoreSc1 advantage="None" conceptID="Res50" novelty="None" type="Res"/><text>Congesting rate is calculated as the percentage of time a node or region has been congested divided by the average time between fullness periods for the node or region, given in Formula (7).</text></s>
<s sid="192"><CoreSc1 advantage="None" conceptID="Con21" novelty="None" type="Con"/><text>This congestion signal indicates the likelihood of traffic spikes that could cause the message to be dropped.</text></s>
<s sid="193"><CoreSc1 advantage="None" conceptID="Met15" novelty="None" type="Met"/><text>Each node keeps track of the percentage of time it has been full (T%Full(X)) in Formula (7a), and the average time between its fullness periods (TAT(X)) in Formula (7b).(7)CR(X)=T%Full(X)TAT(X)(7a)T%Full(X)=100¬∑TFullBuffer(X)TTotalTime(X)(7b)TAT(X)=1N¬∑‚àëi=1NTiend(X)-Tistart(X)Note that TFullBuffer(X) is the time the buffer has been and TTotalTime(X) is the total time duration.</text></s>
<s sid="194"><CoreSc1 advantage="None" conceptID="Obs3" novelty="None" type="Obs"/><text>Tistart(X) and Tiend(X) are the start and end of between full buffer periods respectively.</text></s>
<s sid="195"><CoreSc1 advantage="None" conceptID="Res51" novelty="None" type="Res"/><text>Ego Network retentiveness, receptiveness and congesting rate (WENret WENrec WENcr) refer to congestion heuristics of the node's ego network.</text></s>
<s sid="196"><CoreSc1 advantage="None" conceptID="Res52" novelty="None" type="Res"/><text>Ego network (EN) is defined here as a network consisting of a single node together with the nodes they have encountered and gives each node their own perspective of the network.</text></s>
<s sid="197"><CoreSc1 advantage="None" conceptID="Res53" novelty="None" type="Res"/><text>CafRep allows nodes to aggregate resource observations disseminated by encountered nodes in order to form an ego-network perspective of the network.</text></s>
<s sid="198"><CoreSc1 advantage="None" conceptID="Con22" novelty="None" type="Con"/><text>Ego-network information can be aggregated in many different ways and we have explored a number of models for weighting the contacts within a nodes ego-network in order to improve the accuracy of prediction of the EN congestion levels.</text></s>
<s sid="199"><CoreSc1 advantage="None" conceptID="Con23" novelty="None" type="Con"/><text>This is highly important as it leads to better performance for both forwarding and replication optimizations and making the nodes less selfish.</text></s>
<s sid="200"><CoreSc1 advantage="None" conceptID="Con24" novelty="None" type="Con"/><text>More specifically, we have considered techniques such as simple average, weighted moving average (EWMA) and social weighting of the nodes ego network congestion heuristics.</text></s>
<s sid="201"><CoreSc1 advantage="None" conceptID="Con25" novelty="None" type="Con"/><text>Our experiments have shown that EWMA gives better performance than the simple weighting and the social weighting across diverse network topologies.</text></s>
<s sid="202"><CoreSc1 advantage="None" conceptID="Con26" novelty="None" type="Con"/><text>Formula (8) shows how we use EWMA to aggregate congestion heuristic information in order to allow the short-term fluctuations to be smoothed out and longer-term trends to be highlighted making it suitable for forecasting.</text></s>
<s sid="203"><CoreSc1 advantage="None" conceptID="Res54" novelty="None" type="Res"/><text>This is updated at each new encounter for each congestion heuristic (h).(8)WENh(X,Ci(X))=(1-Œª)¬∑WENh(X)+Œª¬∑h(Ci(X))Œª is a fraction that represents the responsiveness of the smoothing, this is typically around 0.8 [38,26].</text></s>
<s sid="204"><CoreSc1 advantage="None" conceptID="Res55" novelty="None" type="Res"/><text>Related state of the art work on congestion control in DTNs [38,26] that uses implicit local congestion signals to estimate global congestion levels uses EWMA with values of 0.85 or 0.9 for the most recent value a node observes.</text></s>
<s sid="205"><CoreSc1 advantage="None" conceptID="Res56" novelty="None" type="Res"/><text>In [38], each node independently calculates a local approximation of the current congestion level as the ratio of drops and replications collected in the last time interval.</text></s>
<s sid="206"><CoreSc1 advantage="None" conceptID="Res57" novelty="None" type="Res"/><text>[38] calculate new congestion value using an estimated weighted moving average (EWMA) with the new congestion view being weighted 0.9 to keep node's congestion view fresh.</text></s>
<s sid="207"><CoreSc1 advantage="None" conceptID="Res58" novelty="None" type="Res"/><text>Similarly, in [26], the locally calculated encounter value (EV) used to track node's rate of encounter uses the exponentially weighted moving average that places an emphasis proportional to 0.85 on the most recent complete Current Window counter.</text></s>
<s sid="208"><CoreSc1 advantage="None" conceptID="Res59" novelty="None" type="Res"/><text>The authors argue that their experiments showed that Œª of 0.85 and update interval of around 30s allow for reasonable results in a variety of networks.</text></s>
<s sid="209"><CoreSc1 advantage="None" conceptID="Res60" novelty="None" type="Res"/><text>In our experiments we have chosen a value of 0.8 even though results were similar for 0.85 and 0.9.</text></s>
CafRep algorithm
<s sid="210"><CoreSc1 advantage="None" conceptID="Res61" novelty="None" type="Res"/><text>Our CafRep algorithm functions as follows.</text></s>
<s sid="211"><CoreSc1 advantage="None" conceptID="Res62" novelty="None" type="Res"/><text>When a forwarding node (X), meets contacts on its way, it exchanged relevant heuristics and calculates the CafRepUtil of each contact.</text></s>
<s sid="212"><CoreSc1 advantage="None" conceptID="Res63" novelty="None" type="Res"/><text>The CafRepUtil allows the node X to detect how well connected its contact Y is and how available Y and Y's ego network are in terms of buffer, delay and congesting rate parameters.</text></s>
<s sid="213"><CoreSc1 advantage="None" conceptID="Res64" novelty="None" type="Res"/><text>If there are multiple encounters, node X sorts them in the reverse order (from the highest to the lowest) in terms of their CafRepUtil, calculates respective sending and replication rates for each node and sends the appropriate ReplRate copies of the messages to each one of them invoking the pseudo code for interest-driven content transmission over CafRep given in Fig. 4.</text></s>
<s sid="214"><CoreSc1 advantage="None" conceptID="Con27" novelty="None" type="Con"/><text>If the receiving node still has available resources after receiving all the topics of interest, node X will send additional messages it has in its buffer (in a FIFO manner) as long as they are not duplicates.</text></s>
<s sid="215"><CoreSc1 advantage="None" conceptID="Con28" novelty="None" type="Con"/><text>The reason for this is that the node X should offload the messages to nodes with better resources even if they are not directly or indirectly interested in it as they will have better opportunities to forward these messages on.</text></s>
<s sid="216"><CoreSc1 advantage="None" conceptID="Res65" novelty="None" type="Res"/><text>If two contacts are equally suited to forward a message, they each receive half of the available copies.</text></s>
<s sid="217"><CoreSc1 advantage="None" conceptID="Res66" novelty="None" type="Res"/><text>A contact receives more or fewer messages depending whether it has greater or smaller utility respectfully.</text></s>
<s sid="218"><CoreSc1 advantage="None" conceptID="Res67" novelty="None" type="Res"/><text>The replication rate is rounded to the nearest integer so that in the single copy case messages are propagated provided a minimum of equivalent utility is met.</text></s>
<s sid="219"><CoreSc1 advantage="None" conceptID="Res68" novelty="None" type="Res"/><text>In this way, CafRep adapts the initial number of copies (M) in order to carefully manage the trade-off between the network size and traffic demands.</text></s>
<s sid="220"><CoreSc1 advantage="None" conceptID="Res69" novelty="None" type="Res"/><text>As CafRepUtil of a node moves up and down, the replication limit grows to take advantage of all available resources, but backs-off when congestion increases, similar to how TCP updates its congestion window [22].</text></s>
<s sid="221"><CoreSc1 advantage="None" conceptID="Res70" novelty="None" type="Res"/><text>As a result, our protocol is able to replicate at adaptively lower rates in the parts of the network that have low buffer availability, increased node delay and are likely to congest faster.</text></s>
<s sid="222"><CoreSc1 advantage="None" conceptID="Res71" novelty="None" type="Res"/><text>As CafRep node discovers parts of the network with higher buffer availability, lower node delays and slower congesting rates, it replicates at higher rates.</text></s>
<s sid="223"><CoreSc1 advantage="None" conceptID="Res72" novelty="None" type="Res"/><text>Using social utilities together with resource utilities as part of CafRepUtil enables little (or no) replication at high rates on nodes and network regions that available but not on the direct path to the destination.</text></s>
<s sid="224"><CoreSc1 advantage="None" conceptID="Res73" novelty="None" type="Res"/><text>At the same time, using Resources Utilities allows CafRep to replicate at nodes that do not have high social utilities but have high available resources.</text></s>
<s sid="225"><CoreSc1 advantage="None" conceptID="Res74" novelty="None" type="Res"/><text>With the use of combined adaptive forwarding and replication, we allow the sender to stop sending until it finds the right node that it can redirect the traffic to without incurring additional packet loss.</text></s>
<s sid="226"><CoreSc1 advantage="None" conceptID="Res75" novelty="None" type="Res"/><text>Using ego network resource utilities in addition to social utilities allows CafRep to account for a wider view of the network resources and connectivity patterns while allowing differing local conditions.</text></s>
<s sid="227"><CoreSc1 advantage="None" conceptID="Res76" novelty="None" type="Res"/><text>This is very suitable for the DTNs where the nodes and parts of the networks can be highly heterogeneous in terms of connectivity and resource parameters.</text></s>
<s sid="228"><CoreSc1 advantage="None" conceptID="Con29" novelty="None" type="Con"/><text>We argue that CafRepUtil congestion metric is more efficient for heterogeneous DTNs than the metrics that estimates global congestion parameters in DTNs proposed in EBR and RR as it conveys information about which parts of the network are more congested than the others, and can opportunistically use parts of the network that are available while the others are busy.</text></s>
<s sid="229"><CoreSc1 advantage="None" conceptID="Con30" novelty="None" type="Con"/><text>In this way, CafRep enables replication at different rates at different parts of the network that are dissimilar from each other and thus have different social and resource characteristics and patterns.</text></s>
Content transmission over CafRep
<s sid="230"><CoreSc1 advantage="None" conceptID="Obs4" novelty="None" type="Obs"/><text>We describe an example of an interest driven overlay for content dissemination on the top of CafREP in Fig. 4.</text></s>
<s sid="231"><CoreSc1 advantage="None" conceptID="Mod19" novelty="None" type="Mod"/><text>We assume that the content contains topics and each topic has chunks that can be exchanged when the two nodes meet via summary vector.</text></s>
<s sid="232"><CoreSc1 advantage="None" conceptID="Mod20" novelty="None" type="Mod"/><text>Each chunk has a unique ID.</text></s>
<s sid="233"><CoreSc1 advantage="None" conceptID="Mod21" novelty="None" type="Mod"/><text>For easier bootstrapping, we assume that some subscribers that are known to the publishers, while others are discovered in an ad hoc manner.</text></s>
<s sid="234"><CoreSc1 advantage="None" conceptID="Mod22" novelty="None" type="Mod"/><text>When propagating resource and centrality information, our nodes also propagate their interests by exchanging their interest profiles (topics they are interested in) and summary vectors in order to avoid sending chunks to nodes that are already carrying the same chunks.</text></s>
<s sid="235"><CoreSc1 advantage="None" conceptID="Res77" novelty="None" type="Res"/><text>The Summary Vector contains a list of chunk IDs per topic that a node currently carries per topic.</text></s>
<s sid="236"><CoreSc1 advantage="None" conceptID="Res78" novelty="None" type="Res"/><text>As described in Fig. 3, when two nodes meet, the sending node scans for neighbouring nodes' and calculates their respective relative CafRep Utilities.</text></s>
<s sid="237"><CoreSc1 advantage="None" conceptID="Res79" novelty="None" type="Res"/><text>Each neighbouring nodes' CafRep Utility is weighted and sorted in a list so that the node with the largest weight appears first in the list.</text></s>
<s sid="238"><CoreSc1 advantage="None" conceptID="Res80" novelty="None" type="Res"/><text>When the sending and replication rates are determined for a node, pseudo code in Fig. 4 is invoked per node to transmit the content to each node.</text></s>
<s sid="239"><CoreSc1 advantage="None" conceptID="Res81" novelty="None" type="Res"/><text>Before the sending node starts sending the chunks to its contact, the receiving node is queried about its topics and chunks that it already has per topic.</text></s>
<s sid="240"><CoreSc1 advantage="None" conceptID="Res82" novelty="None" type="Res"/><text>When the queried node responds, the sending node finds the intersection of the topics between the two nodes and then it calculates for each topic the complement of the two summary vectors the nodes have to determine the list of topics and associated chunks to be sent without duplication.</text></s>
<s sid="241"><CoreSc1 advantage="None" conceptID="Res83" novelty="None" type="Res"/><text>Exploring different weighting for congestion heuristics</text></s>
<s sid="242"><CoreSc1 advantage="None" conceptID="Res84" novelty="None" type="Res"/><text>CafFRep adaptively moves the traffic away from the more overloaded parts of the network to freer parts of the network while avoiding greedy choices of choosing the currently more available nodes that may congest later on.</text></s>
<s sid="243"><CoreSc1 advantage="None" conceptID="Con31" novelty="None" type="Con"/><text>The decisions of how cautious (versus how greedy) a node should be when choosing the next hop and deciding on the number of packets are not trivial to make and could depend on the state of the network and relative weights of the CafRep utilities.</text></s>
<s sid="244"><CoreSc1 advantage="None" conceptID="Con32" novelty="None" type="Con"/><text>At times of low congestion, social utility is the primary utility for forwarding and replication policy but as the congestion increases the social utility plays a smaller role while resource considerations become increasingly important.</text></s>
<s sid="245"><CoreSc1 advantage="None" conceptID="Con33" novelty="None" type="Con"/><text>More specifically, social utility allows the nodes to find the most direct route to the destinations and gives more copies to the nodes with higher social utility value but can congest them and cause them to be unusable.</text></s>
<s sid="246"><CoreSc1 advantage="None" conceptID="Res85" novelty="None" type="Res"/><text>When congestion happens, the combined utility allows CafRep to de-cluster individual nodes and parts of the network by leveraging social metric with resource constraints.</text></s>
<s sid="247"><CoreSc1 advantage="None" conceptID="Res86" novelty="None" type="Res"/><text>In Section 3.5.1 we defined CafRep utility as the sum of the equally contributing utility values.</text></s>
<s sid="248"><CoreSc1 advantage="None" conceptID="Con34" novelty="None" type="Con"/><text>Computing optimal weights that adaptively favour different utilities differently at different times is a very difficult problem even with the complete knowledge about the environment [47].</text></s>
<s sid="249"><CoreSc1 advantage="None" conceptID="Con35" novelty="None" type="Con"/><text>In the case of inherent uncertainty of the DTN environments, extreme heterogeneity of the connectivity patters and no feedback, related research [47] has ruled out provably efficient online routing algorithms.</text></s>
<s sid="250"><CoreSc1 advantage="None" conceptID="Con36" novelty="None" type="Con"/><text>In [46], the authors analysed the impact of storage and transmission limitations on DTN message routing by and aimed to provide a comprehensive formalisation of this problem based on the first principle of Wardrop, but their based their work on the Oracle based routing algorithm.</text></s>
<s sid="251"><CoreSc1 advantage="None" conceptID="Con37" novelty="None" type="Con"/><text>This is not applicable to our work as we are interested in fully distributed opportunistic approach.</text></s>
<s sid="252"><CoreSc1 advantage="None" conceptID="Goa19" novelty="None" type="Goa"/><text>Even though we do not aim to theoretically analyse different utility weighting models, we have, in our earlier work [31], considered assigning different weights to each of the utilities for Caf√© in order to empirically explore their relative importance on the adaptive forwarding.</text></s>
<s sid="253"><CoreSc1 advantage="None" conceptID="Res87" novelty="None" type="Res"/><text>Our extensive experiments over RollerNet trace [21] revealed a number of interesting findings.</text></s>
<s sid="254"><CoreSc1 advantage="None" conceptID="Res88" novelty="None" type="Res"/><text>We showed that utilising only a single forwarding strategy based on one node utility leads to suboptimal next hop choices.</text></s>
<s sid="255"><CoreSc1 advantage="None" conceptID="Obs5" novelty="None" type="Obs"/><text>For example, in [15] retentiveness was weighted significantly higher than receptiveness and our results showed increased delays and decreased success ratios over Infocom 2006 trace [33] compared to when they were equally weighted [31].</text></s>
<s sid="256"><CoreSc1 advantage="None" conceptID="Res89" novelty="None" type="Res"/><text>Similarly, when we weighted the receptiveness significantly higher than the retentiveness, Caf√© performance was lower due to the increased packet loss rates [31] as a result of greedy storage utilisation.</text></s>
<s sid="257"><CoreSc1 advantage="None" conceptID="Res90" novelty="None" type="Res"/><text>Another interesting finding was that using ego network retentiveness only was highly valuable for forwarding in social opportunistic networks such as Infocom trace [33].</text></s>
<s sid="258"><CoreSc1 advantage="None" conceptID="Res91" novelty="None" type="Res"/><text>In particular, even a simple ego network retentiveness utility for the majority of time performed better than more sophisticated analysis of the node only resources statistics.</text></s>
<s sid="259"><CoreSc1 advantage="None" conceptID="Res92" novelty="None" type="Res"/><text>This was expected as Infocom is a social trace with high degree of reoccurring contacts.</text></s>
<s sid="260"><CoreSc1 advantage="None" conceptID="Res93" novelty="None" type="Res"/><text>Both of our empirical results with Caf√© over RollerNet and Infocom 2006 traces [21,33] revealed that combined metric of similar weights allows the forwarding protocol to be sufficiently dynamic and flexible to operate as mainly social protocol at times of low congestion and as a mainly resource driven protocol at times of high congestion.</text></s>
<s sid="261"><CoreSc1 advantage="None" conceptID="Res94" novelty="None" type="Res"/><text>In this section, we describe our experiments with different CafRep weightings across three topologically different traces: one highly social (Infocom 2006 [33]), one sparse social (Sassy [44]) and one highly sparse vehicular (SF Cabs [45]).</text></s>
<s sid="262"><CoreSc1 advantage="None" conceptID="Res95" novelty="None" type="Res"/><text>These traces are described in Section 4.1.</text></s>
<s sid="263"><CoreSc1 advantage="None" conceptID="Res96" novelty="None" type="Res"/><text>As with Caf√© evaluation, extreme differences between CafRep utilities do not result in performance gain, so here we look at the finer differences between the CafRep utilities' weightings.</text></s>
<s sid="264"><CoreSc1 advantage="None" conceptID="Obs6" novelty="None" type="Obs"/><text>As per each individual trace, we could not detect dramatic differences in the performance results between different CafRep weightings.</text></s>
<s sid="265"><CoreSc1 advantage="None" conceptID="Obs7" novelty="None" type="Obs"/><text>Fig. 5 shows no more that 5% difference in success ratios between the best and worst performer per trace.</text></s>
<s sid="266"><CoreSc1 advantage="None" conceptID="Con38" novelty="None" type="Con"/><text>However, we could clearly detect that some utilities were significantly more dominant than the others across different traces.</text></s>
<s sid="267"><CoreSc1 advantage="None" conceptID="Res97" novelty="None" type="Res"/><text>More specifically, in order to understand the impact of the SocialUtil, we looked into High SocialUtil (0.6 of the CafrepUtil), Low SocialUtil (0.3 of CafRepUtil) and Equal SocialUtil (0.5 of the CafRepUtil) while the node utilities end ego network utilities were ranked equally.</text></s>
Figs.
<s sid="268"><CoreSc1 advantage="None" conceptID="Res98" novelty="None" type="Res"/><text>5 and 6 show that CafRep with lowest social weighting (0.3) has the highest success ratio (46-48%) and the lowest delay (29-45h) for San Francisco Cab trace [45].</text></s>
<s sid="269"><CoreSc1 advantage="None" conceptID="Res99" novelty="None" type="Res"/><text>This is expected as this trace has the sparsest topology with least repetitive connectivity patterns.</text></s>
<s sid="270"><CoreSc1 advantage="None" conceptID="Res100" novelty="None" type="Res"/><text>CafRep with high SocialUtil achieved highest success ratios (90-81%) and lowest delays (67-132s) for Infocom 2006 and Sassy (73-64% and 44-83min).</text></s>
<s sid="271"><CoreSc1 advantage="None" conceptID="Res101" novelty="None" type="Res"/><text>CafRep with equal SocialUtil and low SocialUtil closely follow the high Social utility for the respective traces.</text></s>
<s sid="272"><CoreSc1 advantage="None" conceptID="Res102" novelty="None" type="Res"/><text>This is expected as both of these traces are social and have more repeating contact patterns so SocialUtil is able to utilise the complex graphs statistic in order to make better predictions about the most direct route to the destination.</text></s>
<s sid="273"><CoreSc1 advantage="None" conceptID="Res103" novelty="None" type="Res"/><text>Even though both include human mobility patterns, compared to Infocom 2006 trace, Sassy trace [44] has much less regular and sparser connectivity, no highly central points (as the ones deployed by Infocom 2006).</text></s>
<s sid="274"><CoreSc1 advantage="None" conceptID="Res104" novelty="None" type="Res"/><text>This results in lower performance results for all weightings of SocailUtils for Sassy compared to Infocom.2006.</text></s>
<s sid="275"><CoreSc1 advantage="None" conceptID="Goa20" novelty="None" type="Goa"/><text>In order to understand the relative importance of ego network utilities and node utilities, we looked into CafRep with low SocialUtil (0.2 of CafREpUtil) and unequal weightings between ego network utilities and node utilities: first we weighted ego network utilities 0.6 and node utilities as 0.2 of CafREpUtil (we refer to it as HighEN Util) and then we weighted ego network utilities 0.2 and node utility as 0.6 of CafRepUtil (we refer to it LowEN Util).</text></s>
<s sid="276"><CoreSc1 advantage="None" conceptID="Res105" novelty="None" type="Res"/><text>It is interesting to see that ego network resources play less important role than node resources in San Francisco Cab trace [45] compared to Sassy [44] and Infocom 2006 [33] traces.</text></s>
<s sid="277"><CoreSc1 advantage="None" conceptID="Res106" novelty="None" type="Res"/><text>More specifically, CafRep with HighEN Util achieves lower success ratio than CafRep with LowEN Util for the SF Cabs trace [45] (and vice versa for SASSY and Infocom 2006 traces).</text></s>
<s sid="278"><CoreSc1 advantage="None" conceptID="Obs8" novelty="None" type="Obs"/><text>Fig. 5 shows CafRep with HighEN Utils success ratio ranging from around 47% to 44% for SF Cab trace, followed by 68-60% for Sassy trace and 86-76% for Infocom 2006 trace.</text></s>
<s sid="279"><CoreSc1 advantage="None" conceptID="Res107" novelty="None" type="Res"/><text>This lowest performance of SF Cab trace [45] is due to it having the least repeating mobility patterns and thus not benefiting significantly from the nodes' ego network resources predictions for future forwarding.</text></s>
<s sid="280"><CoreSc1 advantage="None" conceptID="Res108" novelty="None" type="Res"/><text>So the most greedy approach of low EN Util and low Social works the best for SF Cab trace [45] while its performance it the worst for the other two social traces.</text></s>
<s sid="281"><CoreSc1 advantage="None" conceptID="Res109" novelty="None" type="Res"/><text>In the case of both social traces, HighEN Util performs better than LowEN Util but worse than higher SocialUtil version of CafRep.</text></s>
<s sid="282"><CoreSc1 advantage="None" conceptID="Res110" novelty="None" type="Res"/><text>This is expected as ego networks play a more important role in social traces.</text></s>
Evaluation methodology
<s sid="283"><CoreSc1 advantage="None" conceptID="Obj39" novelty="None" type="Obj"/><text>We perform extensive evaluations of CafRep against state of the art DTN protocols across a range of metrics, three realistic topologies, and two application scenarios.</text></s>
<s sid="284"><CoreSc1 advantage="None" conceptID="Obj40" novelty="None" type="Obj"/><text>As mobility and connectivity patterns of nodes have major impact on the performance of communication protocols in DTNs, we choose three real-life connectivity and GPS traces from CRAWDAD [1] to ensure sensible transmission ranges and realistic movement patterns of mobile users and vehicles.</text></s>
<s sid="285"><CoreSc1 advantage="None" conceptID="Met16" novelty="None" type="Met"/><text>Our selected traces exhibit vastly different connectivity patterns and we describe them in Section 4.1 We use two different application scenarios that have different traffic patterns: publish subscribe podcasting application where publishers publish messages with fixed sizes at constant bit rate, and Facebook social networking application that has heterogeneous users that generate content at a variety of different rates and sizes.</text></s>
<s sid="286"><CoreSc1 advantage="None" conceptID="Met17" novelty="None" type="Met"/><text>We induce varying levels of congestion by increasing the percentage of randomly chosen publishers for the podcasting application and by decreasing buffer sizes for the Facebook application.</text></s>
<s sid="287"><CoreSc1 advantage="None" conceptID="Met18" novelty="None" type="Met"/><text>Increasing the number of randomly chosen publishers allows us to have non-uniform temporal and spatial congestion rates across the network topology.</text></s>
<s sid="288"><CoreSc1 advantage="None" conceptID="Res111" novelty="None" type="Res"/><text>This example podcasting application is appropriate for the realistic photo/video uploading application scenarios that were shown to have a larger number of publishers than subscribers [41].</text></s>
<s sid="289"><CoreSc1 advantage="None" conceptID="Res112" novelty="None" type="Res"/><text>We compare CafRep to two benchmark DTN routing protocols and three competitive (adaptive) routing DTN protocols.</text></s>
<s sid="290"><CoreSc1 advantage="None" conceptID="Res113" novelty="None" type="Res"/><text>All our experiments are done in the ONE simulator [20] and our performance metrics include: success ratio, end to end delay, node buffer availability, number of forwarded packets, packet loss rates, number of delivered packets and number of replicated packets.</text></s>
<s sid="291"><CoreSc1 advantage="None" conceptID="Res114" novelty="None" type="Res"/><text>We aim to show that CafRep adapts well to the topologically different networks and two applications while being efficient in terms of network resources.</text></s>
<s sid="292"><CoreSc1 advantage="None" conceptID="Res115" novelty="None" type="Res"/><text>Real-life connectivity and GPS trace datasets</text></s>
<s sid="293"><CoreSc1 advantage="None" conceptID="Con39" novelty="None" type="Con"/><text>To evaluate CafRep in topologically different networks, we choose to use three real world connectivity and GPS traces from CRAWDAD: Infocom 2006 [33], Sassy 2011 [44] and San Francisco Taxi Cabs 2011 [45] that have different mobility and connectivity patterns.</text></s>
<s sid="294"><CoreSc1 advantage="None" conceptID="Res116" novelty="None" type="Res"/><text>We show that CafRep is successful independently of the connectivity patterns of the underlying networks.</text></s>
<s sid="295"><CoreSc1 advantage="None" conceptID="Met19" novelty="None" type="Met"/><text>The connectivity and GPS traces we use are briefly described below:</text></s>
<s sid="296"><CoreSc1 advantage="None" conceptID="Met20" novelty="None" type="Met"/><text>Infocom 2006 trace [33] consists of a 4-day long trace that is based on a human mobility experiment conducted at Infocom 2006.</text></s>
<s sid="297"><CoreSc1 advantage="None" conceptID="Exp1" novelty="None" type="Exp"/><text>A total of 78 volunteers joined the experiment and each was given an iMote device capable of connecting to other Bluetooth-capable devices.</text></s>
<s sid="298"><CoreSc1 advantage="None" conceptID="Exp2" novelty="None" type="Exp"/><text>In addition 20 static long-range iMote devices were placed at various locations of the conference venue; three of these were semi-static as they were placed in the building lifts.</text></s>
<s sid="299"><CoreSc1 advantage="None" conceptID="Res117" novelty="None" type="Res"/><text>This dataset has been shown to exhibit strong community structure [16].</text></s>
<s sid="300"><CoreSc1 advantage="None" conceptID="Res118" novelty="None" type="Res"/><text>Sassy trace [44] consists of a 79day long trace that is based on a human mobility experiment conducted at St.</text></s>
Andrews in 2011.
<s sid="301"><CoreSc1 advantage="None" conceptID="Res119" novelty="None" type="Res"/><text>A total of 27 volunteers joined the experiment and each was given a TMote Invent sensor mote and encounters were tracked in their day-to-day activates for a period of 79days.</text></s>
<s sid="302"><CoreSc1 advantage="None" conceptID="Res120" novelty="None" type="Res"/><text>The rage of these devices was about 10m and encounters were uploaded to a base station regularly (but the base station did not have any role in forwarding).</text></s>
<s sid="303"><CoreSc1 advantage="None" conceptID="Res121" novelty="None" type="Res"/><text>Similarly to Infocom 2006, this dataset has some social structure but unlike Infocom 2006, it has no infrastructure-like nodes, is much sparser and results in much longer disconnection periods.</text></s>
<s sid="304"><CoreSc1 advantage="None" conceptID="Obs9" novelty="None" type="Obs"/><text>San Francisco Cab Trace [45] are live traces that record the GPS coordinates of 550 cabs, logged approximately every 10s, over a period of 30days, in the San Francisco Bay Area.</text></s>
<s sid="305"><CoreSc1 advantage="None" conceptID="Res122" novelty="None" type="Res"/><text>We have downloaded the most recent at the time of writing traces for the period of September 20th 2011 to October 20th 2011 via the Cabspoting.org API.</text></s>
<s sid="306"><CoreSc1 advantage="None" conceptID="Res123" novelty="None" type="Res"/><text>These traces are part of the Cabspotting project [45] that aimed to infer and visualise Taxi Cab collocation information from GPS coordinates in the San Francisco Bay Area.</text></s>
<s sid="307"><CoreSc1 advantage="None" conceptID="Mod23" novelty="None" type="Mod"/><text>We have assumed that two cabs are collocated if their physical distance is less than 50m, furthermore, as cab clocks are not synchronised we have assumed a 60s interval during which, if the distance between two cabs is less than 50m, those cabs are assumed to be collocated.</text></s>
<s sid="308"><CoreSc1 advantage="None" conceptID="Res124" novelty="None" type="Res"/><text>We use 100 taxis that where logging their location data most frequently for higher confidence and accuracy of the GPS traces.</text></s>
<s sid="309"><CoreSc1 advantage="None" conceptID="Obs10" novelty="None" type="Obs"/><text>This trace has shown to exhibit long periods of disconnections, short periods of connectivity and islands of connectivity that are rarely populated by more than two nodes.</text></s>
<s sid="310"><CoreSc1 advantage="None" conceptID="Res125" novelty="None" type="Res"/><text>Fig. 7 draws a comparison between the three described mobility traces Infocom 2006 [33], Sassy [44], and SF Cabs [45], highlighting their topological differences.</text></s>
<s sid="311"><CoreSc1 advantage="None" conceptID="Res126" novelty="None" type="Res"/><text>Fig. 7 shows that SF Cab trace [45] is the most challenging trace with very short connectivity durations, very high disconnections and low number of connected nodes during connected times.</text></s>
<s sid="312"><CoreSc1 advantage="None" conceptID="Res127" novelty="None" type="Res"/><text>Both Sassy [44] and SF Cabs [45] are significantly more challenging compared to Infocom 2006 [33] both due to the smaller numbers of neighbours during connectivity times (connectivity sets), and short connections combined with long disconnections.</text></s>
<s sid="313"><CoreSc1 advantage="None" conceptID="Obs11" novelty="None" type="Obs"/><text>Fig. 7a shows that both Sassy [44] and SF Cab [45] traces exhibit predominantly short contact durations (a mean of 33s and 31s, a median of 27s and 24s and a maximum of 2.3min and 4min respectively) while Infocom 2006 displays substantially longer contact durations (a mean of 3min, a median of 2.5min and a maximum value of 7min).</text></s>
<s sid="314"><CoreSc1 advantage="None" conceptID="Obs12" novelty="None" type="Obs"/><text>Fig. 7b illustrates three different trends regarding node isolation periods.</text></s>
<s sid="315"><CoreSc1 advantage="None" conceptID="Obs13" novelty="None" type="Obs"/><text>SF Cabs trace suffers the longest periods of isolation (a mean of 10h, a median of 6.5h and a maximum value of 4.5days); while Sassy is significantly more disconnected than Infocom 2006 but much more connected than SF with mean 1.5h, median 14min and maximum 11h; and Infocom 2006 experiences substantially lower periods of isolation (a mean of 5.5min, a median of 6.4min and a maximum value of 1.5h).</text></s>
<s sid="316"><CoreSc1 advantage="None" conceptID="Obs14" novelty="None" type="Obs"/><text>Fig. 7c displays the difference in node connectivity between the three datasets.</text></s>
<s sid="317"><CoreSc1 advantage="None" conceptID="Res128" novelty="None" type="Res"/><text>This is calculated as the number of active connections a node has at the time a new connection is established.</text></s>
<s sid="318"><CoreSc1 advantage="None" conceptID="Obs15" novelty="None" type="Obs"/><text>SF Cabs trace has the lowest observed node connectivity (a mean of 2, a median of 1.9 and a maximum value of 4.47 connections), Infocom 2006 has the highest observed node connectivity (a mean of 6.19, a median of 6.44 and a maximum value of 10 connections) and Sassy experiences a mean of 2.95, a median of 2.23 and a maximum value of 7.57 connections).</text></s>
<s sid="319"><CoreSc1 advantage="None" conceptID="Obs16" novelty="None" type="Obs"/><text>Each of these datasets provides a different and challenging environment for the algorithms to perform in: SF Cabs due to the very long periods of isolation, short periods of connectivity and small connectivity sets; Infocom 2006 due to the longer periods of connectivity, moderate isolation periods and larger connectivity sets.</text></s>
<s sid="320"><CoreSc1 advantage="None" conceptID="Obs17" novelty="None" type="Obs"/><text>Sassy due to short connectivity periods, longer isolation periods and small connectivity sets.</text></s>
<s sid="321"><CoreSc1 advantage="None" conceptID="Res129" novelty="None" type="Res"/><text>In Section 5 we show that CafRep adapts well to the dynamics of all three datasets as it keeps high success ratio and availability, low delay and packet loss rates, and outperforms the other protocols across all datasets.</text></s>
<s sid="322"><CoreSc1 advantage="None" conceptID="Obj41" novelty="None" type="Obj"/><text>We compare the performance of CafRep against benchmark protocols: Prophet [23], Spray and Focus (SF) [37] and competitive adaptive protocols Caf√© [15], Encounter Based Routing (EBR) [26] and Retiring Replicas (RRs) [38].</text></s>
<s sid="323"><CoreSc1 advantage="None" conceptID="Con40" novelty="None" type="Con"/><text>Prophet has become a prevalent benchmark forwarding algorithm, SF as it is a prominent fixed replication forwarding algorithm, EBR due to replication placement being variable and RR because of its distinct adaptive replication capping.</text></s>
Application models
<s sid="324"><CoreSc1 advantage="None" conceptID="Goa21" novelty="None" type="Goa"/><text>In order to evaluate CafRep in the presence of congestion at different rates and locations, we have designed and built a fully distributed, interest driven overlay file casting application as described in Section 3.</text></s>
<s sid="325"><CoreSc1 advantage="None" conceptID="Res130" novelty="None" type="Res"/><text>We randomly assign topic interest and choose varying number of publishers and subscribers.</text></s>
<s sid="326"><CoreSc1 advantage="None" conceptID="Res131" novelty="None" type="Res"/><text>The data is published by the publishers at the constant bit rate (5Mb/s) and messages of uniform sizes (1MB) are sent to the neighbours.</text></s>
<s sid="327"><CoreSc1 advantage="None" conceptID="Con41" novelty="None" type="Con"/><text>We assume fixed, limited buffer 1GB for this set of experiments.</text></s>
<s sid="328"><CoreSc1 advantage="None" conceptID="Res132" novelty="None" type="Res"/><text>We run eight increments of congestion levels induced by increasing number of publishers ranging from 1/9 to 8/9 of total number of nodes in that connectivity dataset.</text></s>
<s sid="329"><CoreSc1 advantage="None" conceptID="Res133" novelty="None" type="Res"/><text>All simulations are repeated a ten times with different random subscribers and publishers.</text></s>
<s sid="330"><CoreSc1 advantage="None" conceptID="Con42" novelty="None" type="Con"/><text>Related work on publish-subscribe data dissemination in DTNs in [43] explicitly relies on detecting communities and does not consider congestion control.</text></s>
<s sid="331"><CoreSc1 advantage="None" conceptID="Con43" novelty="None" type="Con"/><text>[19] proposes content-based forwarding and buffer management based on content popularity, adding explicit application hints to messages that are visible to each intermediary node, allowing them to cache content, act as distributed storage, or perform application-specific forwarding, but they do not consider congestion awareness or multiple sources.</text></s>
<s sid="332"><CoreSc1 advantage="None" conceptID="Met21" novelty="None" type="Met"/><text>[27] allows generic functions such as bundle routing to be performed differently per application, operation, or resource, but particularly enables application support by means of caching or distributed storage, but does not consider congestion aware forwarding.</text></s>
<s sid="333"><CoreSc1 advantage="None" conceptID="Met22" novelty="None" type="Met"/><text>In order to consider the impact of the real world social application on the behaviour of CafRep, we designed our Facebook Application that allows us to model the traffic typical of communication in social networking applications.</text></s>
<s sid="334"><CoreSc1 advantage="None" conceptID="Met23" novelty="None" type="Met"/><text>We extracted the friendship graphs and statistical data regarding the size and frequency of posts for every user from the Facebook application and used it to drive the publish and subscribe application on the top of CafRep.</text></s>
<s sid="335"><CoreSc1 advantage="None" conceptID="Res134" novelty="None" type="Res"/><text>We have sampled the usage patterns of 95 Facebook users and extracted list of friends associated with each user, their 20 most recent wall post messages and their list of interests.</text></s>
<s sid="336"><CoreSc1 advantage="None" conceptID="Res135" novelty="None" type="Res"/><text>The size of a wall post is calculated as the total download cost (e.g. if a message contains a http link or a photo then this is measured and appended to the message size).</text></s>
<s sid="337"><CoreSc1 advantage="None" conceptID="Res136" novelty="None" type="Res"/><text>Fig. 8a shows the non-uniform sizes of messages generated for each user with the Mean size of 1MB, a Median size of 82KB and a maximum size of 268MB.</text></s>
<s sid="338"><CoreSc1 advantage="None" conceptID="Obs18" novelty="None" type="Obs"/><text>We observe three types of message, text, picture and link that are posted at different frequencies: text messages are the most commonly posted (78%), followed by posts containing pictures (19%), with only 3% of posts encompassing links.</text></s>
<s sid="339"><CoreSc1 advantage="None" conceptID="Res137" novelty="None" type="Res"/><text>We found that the most frequent message types (text) formed a small proportion of total traffic (153KB in total and 82B on average out of total 2.3GB observed data) while the remainder of the data was almost equally split between picture messages (1.2GB in total and 3MB on average) and links (1.1GB in total and 18MB on average).</text></s>
<s sid="340"><CoreSc1 advantage="None" conceptID="Res138" novelty="None" type="Res"/><text>Fig. 8b illustrates the duration of time between posts for each users.</text></s>
<s sid="341"><CoreSc1 advantage="None" conceptID="Res139" novelty="None" type="Res"/><text>The most prolific participant posted every 3min on average, whilst the most inactive profile posted content once every 25days on average.</text></s>
<s sid="342"><CoreSc1 advantage="None" conceptID="Res140" novelty="None" type="Res"/><text>We observed that nodes are connected to three friends on average and at most 2% of all other nodes.</text></s>
<s sid="343"><CoreSc1 advantage="None" conceptID="Res141" novelty="None" type="Res"/><text>We define &quot;user profile&quot; that contains statistical information such as: the ratio of text, picture and link messages, the average and standard deviation of message sizes for each message type and the average and standard deviation of message frequency information.</text></s>
<s sid="344"><CoreSc1 advantage="None" conceptID="Mod24" novelty="None" type="Mod"/><text>Formula (9) illustrates how we use the average and standard deviation values in order to generate a new and meaningful value for the next message generation time and message size.</text></s>
<s sid="345"><CoreSc1 advantage="None" conceptID="Mod25" novelty="None" type="Mod"/><text>Œª is the average of x, œÉ is the standard deviation of x and W is a normally distributed random number between -1 and 1.(9)P(x)=‚åä0.5+Œª(x)+(œÉ(x)¬∑W)‚åãWhen a message is generated (or as the application starts) the next message is scheduled for generation.</text></s>
<s sid="346"><CoreSc1 advantage="None" conceptID="Res142" novelty="None" type="Res"/><text>When a new message is generated a message type is assigned, as per the observed message type distribution.</text></s>
<s sid="347"><CoreSc1 advantage="None" conceptID="Res143" novelty="None" type="Res"/><text>When the message type has been selected the message size can be assigned based on the relevant statistics.</text></s>
<s sid="348"><CoreSc1 advantage="None" conceptID="Res144" novelty="None" type="Res"/><text>We run ten increments of congestion levels, decreasing the size of buffers from 100MB down to 10MB at 10MB increments.</text></s>
<s sid="349"><CoreSc1 advantage="None" conceptID="Res145" novelty="None" type="Res"/><text>We randomly select traffic profiles for the nodes to follow and simulate multiple runs with different random traffic profiles.</text></s>
<s sid="350"><CoreSc1 advantage="None" conceptID="Res146" novelty="None" type="Res"/><text>Each experiment is emulated over 10 runs, with each run having a different random seed.</text></s>
Evaluation
<s sid="351"><CoreSc1 advantage="None" conceptID="Res147" novelty="None" type="Res"/><text>In this section we first discuss our findings from the interest driven file casting application experiments across each of the three CRAWDAD datasets described in Section 4.1.</text></s>
<s sid="352"><CoreSc1 advantage="None" conceptID="Res148" novelty="None" type="Res"/><text>We then briefly report on the observations from our Facebook application over RollerNet trace [21] that has highly challenging connectivity patterns due to the Accordion Effect described in [39].</text></s>
<s sid="353"><CoreSc1 advantage="None" conceptID="Res149" novelty="None" type="Res"/><text>For more consistent comparisons between the datasets, we use CafRepUtil for all of our experiments as defined in Section 3 with SocialUtil, node resource utilities and ego network resource utilities being equally weighted.</text></s>
<s sid="354"><CoreSc1 advantage="None" conceptID="Res150" novelty="None" type="Res"/><text>We show that CafRep adapts well to different mobility and connectivity patters and outperforms five major competitive and benchmark protocols.</text></s>
<s sid="355"><CoreSc1 advantage="None" conceptID="Res151" novelty="None" type="Res"/><text>Compared to the traces we used in our earlier work [15,30,31,48], in this work, we use two new, very different data traces (social and vehicular) that are much sparser and have much less frequently recurring connectivity patterns (Sassy [44] and SF Cabs [45]).</text></s>
<s sid="356"><CoreSc1 advantage="None" conceptID="Obs19" novelty="None" type="Obs"/><text>It is interesting to see that CafRep performance is slightly worse for the new social trace (Sassy traces [44]) compared to the old social trace (Infocom traces [33]).</text></s>
<s sid="357"><CoreSc1 advantage="None" conceptID="Obs20" novelty="None" type="Obs"/><text>Similarly, CafRep also performs on average worse for the new vehicular trace (SF Cab traces [45]) than for the old vehicular (DieselNet) traces.</text></s>
<s sid="358"><CoreSc1 advantage="None" conceptID="Res152" novelty="None" type="Res"/><text>This is due to Sassy [44] and SF Cab traces [45] having much sparser topology and no infrastructure-like nodes that are taking part in the forwarding process.</text></s>
<s sid="359"><CoreSc1 advantage="None" conceptID="Res153" novelty="None" type="Res"/><text>Both Infocom 2006 [33] and DieselNet [3] traces had the motes and APs that were taking part in the forwarding decisions and were highly central nodes.</text></s>
<s sid="360"><CoreSc1 advantage="None" conceptID="Res154" novelty="None" type="Res"/><text>Without such nodes, CafRep's performance is lower but still better than for other comparative protocols.</text></s>
<s sid="361"><CoreSc1 advantage="None" conceptID="Res155" novelty="None" type="Res"/><text>As expected, the non-adaptive benchmark Spay and Focus [37] and Prophet [23] protocols perform worse compared to other adaptive protocols across all the measures.</text></s>
<s sid="362"><CoreSc1 advantage="None" conceptID="Res156" novelty="None" type="Res"/><text>Both of these protocols start dropping the packets at the congested nodes early into the simulation that results in higher delays and lower success ratios.</text></s>
<s sid="363"><CoreSc1 advantage="None" conceptID="Res157" novelty="None" type="Res"/><text>Prophet [23] performs worse than SnF [37] because it is a non-adaptive single copy protocol.</text></s>
Success ratio and delay
<s sid="364"><CoreSc1 advantage="None" conceptID="Res158" novelty="None" type="Res"/><text>Across all three data connectivity traces CafRep achieves higher success ratio than all other protocols as it more efficiently detects new parts of the networks that have more resources and avoids the parts of the network that are congesting.</text></s>
<s sid="365"><CoreSc1 advantage="None" conceptID="Obs21" novelty="None" type="Obs"/><text>Fig. 9 shows comparative success ratios across five protocols and three traces in the presence of increasing number of publishers.</text></s>
<s sid="366"><CoreSc1 advantage="None" conceptID="Obs22" novelty="None" type="Obs"/><text>Fig. 9 shows that CafRep has on average 10-15% higher success ratio than RR [38] and EBR [26] and more than two times higher success ratios than for SnF [37] and Prophet [23] across all traces.</text></s>
<s sid="367"><CoreSc1 advantage="None" conceptID="Res159" novelty="None" type="Res"/><text>This is due to the combined CafRep utility, its ego network utilities in particular, that manage to predict resource availability in different regions of the network with good accuracy.</text></s>
<s sid="368"><CoreSc1 advantage="None" conceptID="Res160" novelty="None" type="Res"/><text>Contrary to this, RR [38] is concerned with global congestion measures do not sufficiently account for varying regional behaviours and have negative impact on the success ratio when regional congestions arise.</text></s>
<s sid="369"><CoreSc1 advantage="None" conceptID="Res161" novelty="None" type="Res"/><text>More specifically, RR [38] reacts to detected packet loss in a uniform way so that nodes that are congesting still receive packets (even though fewer copies) that they may drop and available nodes do not receive sufficient number of packets.</text></s>
<s sid="370"><CoreSc1 advantage="None" conceptID="Res162" novelty="None" type="Res"/><text>This overutilisation and underutilisation of resources increases the delays and results in lower success ratios for RR [38].</text></s>
<s sid="371"><CoreSc1 advantage="None" conceptID="Res163" novelty="None" type="Res"/><text>Fig. 9 shows success ratios ranging from 77% to 60% for Infocom2006, from 67% to 50% for Sassy, and from 46% to 39% for SFCab.</text></s>
<s sid="372"><CoreSc1 advantage="None" conceptID="Res164" novelty="None" type="Res"/><text>In EBR [26], the respective rates of encounter between two nodes determine the appropriate fraction of message replicas the nodes should exchange.</text></s>
<s sid="373"><CoreSc1 advantage="None" conceptID="Res165" novelty="None" type="Res"/><text>Because EBR [26] relies only on the prediction of the future rate of encounters for each node to decide on the probability of successful message delivery, EBR [26] does not detect congestion and results in highly central nodes congesting at even faster rate which causes increased delays (Fig. 10) and lower success ratios (Fig. 9).</text></s>
<s sid="374"><CoreSc1 advantage="None" conceptID="Res166" novelty="None" type="Res"/><text>Fig. 9 shows success ratios ranging from 72% to 58% for Infocom2006, from 63.6% to 50% for Sassy, and from 44% to 37% for SFCab.</text></s>
<s sid="375"><CoreSc1 advantage="None" conceptID="Res167" novelty="None" type="Res"/><text>Non-adaptive protocols do not check for resource constrains but aggressively keep the most direct routes to the destination that leads to the nodes quickly getting congested, increasing delays and having low success ratios (Figs.</text></s>
9 and 10).
<s sid="376"><CoreSc1 advantage="None" conceptID="Res168" novelty="None" type="Res"/><text>Fig. 9 shows that Prophet's success ratios ranges from 36% to 24% for Infocom2006, from 29% to 19% for Sassy, and from 33% to 13% for SFCab.</text></s>
<s sid="377"><CoreSc1 advantage="None" conceptID="Res169" novelty="None" type="Res"/><text>Similarly, SnF ranges from 55% to 26% for Infocom2006, from 44% to 20% for Sassy, and from 38% to 21% for SFCab.</text></s>
<s sid="378"><CoreSc1 advantage="None" conceptID="Res170" novelty="None" type="Res"/><text>SnF [37] has higher success ratios than Prophet [23] because it is a replication based protocol.</text></s>
<s sid="379"><CoreSc1 advantage="None" conceptID="Res171" novelty="None" type="Res"/><text>It is interesting to see that Caf√© has higher success ratios than SnF and Prophet - more that 50% higher that SnF and more than 200% higher than Prophet across all data traces.</text></s>
<s sid="380"><CoreSc1 advantage="None" conceptID="Res172" novelty="None" type="Res"/><text>The only exception to this is at times of low levels of congestion in SF Cab Trace where the differences are down to 25%.</text></s>
<s sid="381"><CoreSc1 advantage="None" conceptID="Con44" novelty="None" type="Con"/><text>Between the three connectivity data traces, CafRep achieves lowest success ratio in the SF Cab traces [45] (48-44%) due to three reasons: first due to the SF Cab [45] topology described in Section 5.1, the social utility in CafRep cannot identify nodes that are significantly more central; second as the isolation periods are very high, the nodes cannot offload their content for a very long time; and third as the connectivity periods are very short, the publishing nodes that generate data at a constant rate cause increased dropped packets.</text></s>
<s sid="382"><CoreSc1 advantage="None" conceptID="Res173" novelty="None" type="Res"/><text>It is interesting to see that CafRep achieves around 20% lower success ratio over SF Cab trace [45] than over the DieselNet [3] vehicular trace (that we used in our earlier work [48] and showed 70-65% success ratio).</text></s>
<s sid="383"><CoreSc1 advantage="None" conceptID="Res174" novelty="None" type="Res"/><text>This is due to DieselNet trace [3] having a few access points that take part in the forwarding of packets and also having significantly lower isolation periods than SF Cab trace [45] and longer connectivity durations.</text></s>
<s sid="384"><CoreSc1 advantage="None" conceptID="Res175" novelty="None" type="Res"/><text>SF Cab trace [45] that was generated for the purpose of tracking cabs in the SF Bay Area and has much sparser topology that covers a significantly wider area (400 and 1600 square miles) without using any access points (APs) or road-side units (RSUs).</text></s>
<s sid="385"><CoreSc1 advantage="None" conceptID="Con45" novelty="None" type="Con"/><text>We believe that is important that even with such challenging and sparse trace, CafRep manages to outperform other protocols.</text></s>
<s sid="386"><CoreSc1 advantage="None" conceptID="Res176" novelty="None" type="Res"/><text>CafRep achieves higher success ratio over Sassy [44] data trace then with SF Cab trace [45] but much lower than when compared with Infocom data trace.</text></s>
<s sid="387"><CoreSc1 advantage="None" conceptID="Res177" novelty="None" type="Res"/><text>Sassy [44] trace is more challenging than Infocom 2006 because it does not include any infrastructure-like nodes (such as semi-static and static nodes such as those deployed during Infocom2006 [33]) that participate in forwarding, has significantly shorter connectivity durations and sparser network.</text></s>
<s sid="388"><CoreSc1 advantage="None" conceptID="Con46" novelty="None" type="Con"/><text>Because Sassy trace [44] does not contain nodes that are significantly better connected and has much less repetitive pattern than Infocom 2006 (where the participants used the lift or often came to the registration desk where the semi-static and static nodes were deployed) social utility (as part fo CafRep) could not be as helpful as with this trace as with Infocom 2006 trace in identifying the most direct routes to destinations.</text></s>
<s sid="389"><CoreSc1 advantage="None" conceptID="Con47" novelty="None" type="Con"/><text>However, Sassy is significantly more connected than SF Cab trace [45] and thus has much higher success ratios.</text></s>
<s sid="390"><CoreSc1 advantage="None" conceptID="Con48" novelty="None" type="Con"/><text>Across all the three connectivity traces, CafRep manages to keep lower delays compared to the other protocols due to the following two reasons.</text></s>
<s sid="391"><CoreSc1 advantage="None" conceptID="Res178" novelty="None" type="Res"/><text>First, CafRep is able to predict regional in-network delays with good accuracy because of checking for the in-network delays of both the nodes and their ego networks.</text></s>
<s sid="392"><CoreSc1 advantage="None" conceptID="Res179" novelty="None" type="Res"/><text>In this way CafRep is able to more quickly identify (potentially) longer but less congested paths with lower delays than the other protocols.</text></s>
<s sid="393"><CoreSc1 advantage="None" conceptID="Res180" novelty="None" type="Res"/><text>Neither RR [38] nor EBR [26] are able to efficiently discover longer routes with smaller queue sizes but instead only decrease their replication rate and remain in the congested regions for longer periods of times.</text></s>
<s sid="394"><CoreSc1 advantage="None" conceptID="Res181" novelty="None" type="Res"/><text>Fig. 10 shows delays for RR ranging from 100 to 220s, 70-120min and 45-75h for CafRep across Infocom, Sassy [44] and SF Cab traces [45] respectively.</text></s>
<s sid="395"><CoreSc1 advantage="None" conceptID="Res182" novelty="None" type="Res"/><text>For the majority of time this is about two times as high delay as for CafRep across the three traces.</text></s>
<s sid="396"><CoreSc1 advantage="None" conceptID="Res183" novelty="None" type="Res"/><text>Non-adaptive protocols (Prophet [23] and SnF [37]) have aggressive forwarding strategy that quickly leads into congesting the en-route nodes that increase delays.</text></s>
<s sid="397"><CoreSc1 advantage="None" conceptID="Res184" novelty="None" type="Res"/><text>Fig. 10 shows delays for SnF and Prohpet ranging from 180 to 320s, 80-160min and 60-100h for the three traces respectively.</text></s>
<s sid="398"><CoreSc1 advantage="None" conceptID="Res185" novelty="None" type="Res"/><text>This is between 1.5 and 4 times higher than the delays for CafRep.</text></s>
<s sid="399"><CoreSc1 advantage="None" conceptID="Con49" novelty="None" type="Con"/><text>Second, using Social utility as part of the CafRep utility, CafRep ensures best prediction of the most direct route to the destination especially for Sassy and Infocom 2006 traces.</text></s>
<s sid="400"><CoreSc1 advantage="None" conceptID="Con50" novelty="None" type="Con"/><text>Neither of the RR [38], EBR [26], Prophet [23] and SnF [38] use social metrics and resource metrics together and are thus not able to adjust to the dynamics in both of these dimensions.</text></s>
<s sid="401"><CoreSc1 advantage="None" conceptID="Obs23" novelty="None" type="Obs"/><text>Infocom 2006 delays are significantly lower than for the other two datasets across all protocols (seconds versus minutes and hours).</text></s>
<s sid="402"><CoreSc1 advantage="None" conceptID="Res186" novelty="None" type="Res"/><text>This is due to topology characteristics such as short disconnection times, long connection times in Infocom 2006 [33], moderate connectivity sets and few infrastructure-like nodes that allow for more efficient data dissemination.</text></s>
<s sid="403"><CoreSc1 advantage="None" conceptID="Res187" novelty="None" type="Res"/><text>For similar reasons, delays across all protocols are significantly higher for SF Cab Traces [45] than for delays for Sassy [44] and Infocom 2006 traces.</text></s>
<s sid="404"><CoreSc1 advantage="None" conceptID="Res188" novelty="None" type="Res"/><text>Still, because CafRep considers the relative in-network delays, it is able to maintain lower delays than the rest of the protocols.</text></s>
Availability and packet loss
<s sid="405"><CoreSc1 advantage="None" conceptID="Res189" novelty="None" type="Res"/><text>Across all three traces, CafRep sustains higher availability than other protocols.</text></s>
<s sid="406"><CoreSc1 advantage="None" conceptID="Res190" novelty="None" type="Res"/><text>This is because CafRep is able to make good predictions of node and ego network availability which avoid depleting the storage resources of frequently used nodes and regions in the network that drop packets.</text></s>
<s sid="407"><CoreSc1 advantage="None" conceptID="Res191" novelty="None" type="Res"/><text>Fig. 11 shows CafRep availability ranging from 88% to 70% for Infocom 2006, 70-60% for Sassy [44] and 60-35% for Sf Cabs [45].</text></s>
<s sid="408"><CoreSc1 advantage="None" conceptID="Res192" novelty="None" type="Res"/><text>EBR [26] results in lower availability as it congests the regions that are highly central and where the nodes cannot offload the traffic faster than the traffic is generated (that is the example application scenario we are considering).</text></s>
<s sid="409"><CoreSc1 advantage="None" conceptID="Res193" novelty="None" type="Res"/><text>Fig. 11 shows that EBR [26] manages only 70-20% availability over Infocom [33] and Sassy [44] traces and 40-20% for SFCabs trace [45].</text></s>
<s sid="410"><CoreSc1 advantage="None" conceptID="Res194" novelty="None" type="Res"/><text>It is interesting to see in Fig. 12 that RR [38] has higher packet loss rates than CafRep despite RR [38] tracking and adapting to the global packet loss congestion signals.</text></s>
<s sid="411"><CoreSc1 advantage="None" conceptID="Con51" novelty="None" type="Con"/><text>We believe that this is due to RR [38] not being fast enough to detect sudden opportunities of longer but more available paths as it awaits for the global signs of increased packet loss to act locally.</text></s>
<s sid="412"><CoreSc1 advantage="None" conceptID="Res195" novelty="None" type="Res"/><text>RR [38] manages to keep availability levels at 80-20% for Infocom 2006 [33] and Sassy traces [44] and only 45-30% for SF Cabs [45].</text></s>
<s sid="413"><CoreSc1 advantage="None" conceptID="Res196" novelty="None" type="Res"/><text>RR [38] maintains packet loss rates 33-63%, 49-83% and 75-95% for Infocom 2006 [33], Sassy [44] and SF Cabs traces [45] (given in Fig. 12).</text></s>
<s sid="414"><CoreSc1 advantage="None" conceptID="Con52" novelty="None" type="Con"/><text>RR is more suitable for even traffic distribution and connectivity patterns, such as constant bit rate traffic with a random way point mobility model, as the nodes in such networks become congested at a uniform rate.</text></s>
<s sid="415"><CoreSc1 advantage="None" conceptID="Con53" novelty="None" type="Con"/><text>In heterogeneous DTNs that we consider, uniformity is not common, so it is more likely that traffic hot spots trigger messages to be dropped while other areas of the network remain highly available.</text></s>
<s sid="416"><CoreSc1 advantage="None" conceptID="Con54" novelty="None" type="Con"/><text>For such scenarios, when RR [38] uniformly reduces the number of replicas entering the network, it results in underutilisation of existing network resources and overutilisation of some network parts.</text></s>
<s sid="417"><CoreSc1 advantage="None" conceptID="Con55" novelty="None" type="Con"/><text>The low availability of CafRep over SF Cabs traces [45] comes primarily from the very long node isolation periods combined with intense traffic generation during short connectivity durations.</text></s>
<s sid="418"><CoreSc1 advantage="None" conceptID="Con56" novelty="None" type="Con"/><text>This means that, despite discovering more paths than other protocols can discover, with the increase of publishing nodes (above 70% congestion rate where most nodes are publishing), publishing nodes are forced into decreased availability and dropping the packets that they cannot offload.</text></s>
<s sid="419"><CoreSc1 advantage="None" conceptID="Res197" novelty="None" type="Res"/><text>With increased congestion levels (above 50% of publishing nodes), Fig. 11 shows that CafRep manages to keep two times higher availability than EBR [26], and above 50% higher than RR [38].</text></s>
<s sid="420"><CoreSc1 advantage="None" conceptID="Res198" novelty="None" type="Res"/><text>It is interesting to see that the differences in availability between the three adaptive protocols are smallest for low congesting rates in Sassy [44] and Infocom 2006 data traces [33], but as the congestion levels increase, CafRep starts to dominate over RR and EBR starts to fall behind more dramatically.</text></s>
<s sid="421"><CoreSc1 advantage="None" conceptID="Res199" novelty="None" type="Res"/><text>For SF traces [45], CafRep is significantly better than RR [38] and EBR [26] across all congestion levels.</text></s>
<s sid="422"><CoreSc1 advantage="None" conceptID="Res200" novelty="None" type="Res"/><text>This is because EBR [26] and RR [38] are slower to utilise already very infrequent opportunities to divert the traffic along diverse paths.</text></s>
<s sid="423"><CoreSc1 advantage="None" conceptID="Res201" novelty="None" type="Res"/><text>All protocols manage highest availability over the Infocom 2006 trace [33] because this trace is highly social (allows repeating patterns of connectivity) that allows for accurate social/connectivity predictions that CafRep, EBR [26], RR [38] and SnF [37] use.</text></s>
<s sid="424"><CoreSc1 advantage="None" conceptID="Res202" novelty="None" type="Res"/><text>In addition to this, this trace deploys infrastructure-like nodes that facilitate interaction among nodes, has longer contact times, shorter smaller isolation periods and bigger connectivity islands.</text></s>
<s sid="425"><CoreSc1 advantage="None" conceptID="Res203" novelty="None" type="Res"/><text>Availability for both non-adaptive protocols, Prophet and SnF, is low across all the three traces and it ranges from 0.6 to 0.13, 0.6-0.14 and 0.3-0.1 across Infocom 2006, Sassy and SF Cab traces respectively.</text></s>
<s sid="426"><CoreSc1 advantage="None" conceptID="Res204" novelty="None" type="Res"/><text>With the constant bit rate data transmission of the publishing nodes, these two protocols quickly saturate the en-route nodes that increase packet drop rates ranging from 0.59% to 98%.</text></s>
<s sid="427"><CoreSc1 advantage="None" conceptID="Res205" novelty="None" type="Res"/><text>0.71-96% and 0.62-95% across Infocom 2006, Sassy and SF Cabs trace respectively.</text></s>
<s sid="428"><CoreSc1 advantage="None" conceptID="Res206" novelty="None" type="Res"/><text>Cafe, even though being a single packet protocol, maintains significantly better availability: up to twice the availability of and around three times lower packet loss rates than non-adaptive protocols.</text></s>
<s sid="429"><CoreSc1 advantage="None" conceptID="Res207" novelty="None" type="Res"/><text>This is due to Cafe's adaptive forwarding that predicts identifies highly congesting nodes and regions, and avoids them.</text></s>
<s sid="430"><CoreSc1 advantage="None" conceptID="Res208" novelty="None" type="Res"/><text>Performance costs: forwarded, replicated packets and delivery cost</text></s>
<s sid="431"><CoreSc1 advantage="None" conceptID="Res209" novelty="None" type="Res"/><text>We assess performance costs in terms of total average number of delivered, forwarded and replicated packets.</text></s>
<s sid="432"><CoreSc1 advantage="None" conceptID="Res210" novelty="None" type="Res"/><text>Fig. 13a shows that even though CafRep may longer paths but less congested paths, it does not generate significantly more forwarded packets compared to the two adaptive replication protocols RR [38] and EBR [26].</text></s>
<s sid="433"><CoreSc1 advantage="None" conceptID="Res211" novelty="None" type="Res"/><text>For example, we observe similar average numbers of forwarded packets for CafRep, EBR [26] and RR [38] across Infocom 2006 [33] and Sassy [44] but higher for CafRep over SF Cabs [45].</text></s>
<s sid="434"><CoreSc1 advantage="None" conceptID="Con57" novelty="None" type="Con"/><text>This is due to the following two reasons.</text></s>
<s sid="435"><CoreSc1 advantage="None" conceptID="Con58" novelty="None" type="Con"/><text>First, even though CafRep uses greater diversity of available paths, its Social Util allows it to keep as direct route to the destination as possible over the social traces.</text></s>
<s sid="436"><CoreSc1 advantage="None" conceptID="Con59" novelty="None" type="Con"/><text>EBR and RR do not exploit more complex connectivity relationships and may thus result in long paths especially in the presence of increasing congestion.</text></s>
<s sid="437"><CoreSc1 advantage="None" conceptID="Con60" novelty="None" type="Con"/><text>Since SF Can Trace is not a social trace and CafRep benefits less from the sophisticated contact relationship analysis, it results in marginally higher number of forwarded packets.</text></s>
<s sid="438"><CoreSc1 advantage="None" conceptID="Con61" novelty="None" type="Con"/><text>Second, even though EBR, RR and CafRep forward similar rates of packets, EBR and RR drop more packets as the forwarding is not appropriately distributed to match the non-uniform varying resources in the network.</text></s>
<s sid="439"><CoreSc1 advantage="None" conceptID="Con62" novelty="None" type="Con"/><text>The number of forwarded packets for Caf√© [15] and Prophet [23] is smaller than for the other protocols as they do not use replication.</text></s>
<s sid="440"><CoreSc1 advantage="None" conceptID="Con63" novelty="None" type="Con"/><text>As expected, SnF [37] forwards on average highest number of packets as it is non-adaptive replication-based protocol.</text></s>
<s sid="441"><CoreSc1 advantage="None" conceptID="Con64" novelty="None" type="Con"/><text>More interestingly, CafRep and RR replicate similar number of packets across Sassy trace [44] while CafRep replicates 15-30% more than RR [38] and EBR [26] for SF Cab trace [45] (Fig. 13b).</text></s>
<s sid="442"><CoreSc1 advantage="None" conceptID="Con65" novelty="None" type="Con"/><text>We believe that higher replication rates for CafRep in SF Cab trace [45] are due to CafRep discovering more forwarding opportunities that the other two adaptive replication protocols do not discover.</text></s>
<s sid="443"><CoreSc1 advantage="None" conceptID="Con66" novelty="None" type="Con"/><text>Compared to CafRep, EBR [26] replicates 15-20% more packets over Infocom 2006 trace [33] because that trace contains highly central nodes that EBR [26] uses heavily for the replication control and as EBR does not check for resource constraints this replication results in increased packet loss rates and lower availability.</text></s>
<s sid="444"><CoreSc1 advantage="None" conceptID="Con67" novelty="None" type="Con"/><text>Fig. 13c shows the cost of delivery that we define as the number of messages forwarded over the number of messages delivered across six protocols and over the three traces.</text></s>
<s sid="445"><CoreSc1 advantage="None" conceptID="Con68" novelty="None" type="Con"/><text>This is a significant metric as it relates to the average number of hops required to deliver a message.</text></s>
<s sid="446"><CoreSc1 advantage="None" conceptID="Con69" novelty="None" type="Con"/><text>As expected, Caf√© [15] has the lowest cost of delivery across the three traces as it adaptively forwards to offload network hotspots in a delay-aware manner and does not include replication.</text></s>
<s sid="447"><CoreSc1 advantage="None" conceptID="Con70" novelty="None" type="Con"/><text>Out of the replication-based protocols, CafRep outperforms EBR [26], Prophet and SnF [37] across all the three data traces and is only marginally outperformed by RR [38] in the SF Cab dataset [45].</text></s>
<s sid="448"><CoreSc1 advantage="None" conceptID="Con71" novelty="None" type="Con"/><text>As discussed in Section 3, we believe that this higher cost for CafRep in SF Cab trace [45] comes from high weighting of ego network resources and social utility in a trace that does not have node connectivity with good pattern of regularity.</text></s>
<s sid="449"><CoreSc1 advantage="None" conceptID="Con72" novelty="None" type="Con"/><text>We expect better results for CafRep over this trace if we deployed low weighting of social utilities and ego network resources so that the results do not suffer from the poor quality for the ego networks formed in unstructured environments.</text></s>
<s sid="450"><CoreSc1 advantage="None" conceptID="Con73" novelty="None" type="Con"/><text>Our results also show that SnF is consistently the worst performer with approximately double the cost of all the other algorithms, this is due to the static nature of SnF's [37] replication scheme, which under populates the network with traffic when demands are low and does not reduce the volume of traffic when contention is high.</text></s>
<s sid="451"><CoreSc1 advantage="None" conceptID="Con74" novelty="None" type="Con"/><text>Across all the protocols, the cost of message delivery is the lowest for Infocom 2006 trace [33], followed by Sassy trace [44] and then SF Cab trace [45].</text></s>
<s sid="452"><CoreSc1 advantage="None" conceptID="Con75" novelty="None" type="Con"/><text>This is due to significantly better connected Infocom 2006 trace than the other two traces, and most isolated and more random connectivity patterns for SF Cab trace [45].</text></s>
Facebook application
<s sid="453"><CoreSc1 advantage="None" conceptID="Con76" novelty="None" type="Con"/><text>This section explores the effects that real world social networking traffic usage patterns have on the performance of CafRep.</text></s>
<s sid="454"><CoreSc1 advantage="None" conceptID="Obs24" novelty="None" type="Obs"/><text>Fig. 14 illustrates three experiments with different traffic profiles: low traffic profiles, randomly selected traffic profiles and high traffic profiles, which are indicated by 1, 2 and 3 respectively.</text></s>
<s sid="455"><CoreSc1 advantage="None" conceptID="Obj42" novelty="None" type="Obj"/><text>We compare CafRep with benchmark DTN protocols Direct Delivery (DD) [49] and Epidemic (EPI) [50], and the state-of-the-art competing congestion control algorithm Retiring Replicas (RRs) [38].</text></s>
<s sid="456"><CoreSc1 advantage="None" conceptID="Obj43" novelty="None" type="Obj"/><text>In Fig. 14a we evaluate the average number of seconds delay each algorithm experienced across the three different traffic profiles.</text></s>
<s sid="457"><CoreSc1 advantage="None" conceptID="Res212" novelty="None" type="Res"/><text>We observe higher delays for less active profiles (that generate smaller messages at low frequencies) as delivery opportunities are low and message generation is infrequent.</text></s>
<s sid="458"><CoreSc1 advantage="None" conceptID="Res213" novelty="None" type="Res"/><text>This in turn causes nodes to store their messages within their buffer for extended periods of time.</text></s>
<s sid="459"><CoreSc1 advantage="None" conceptID="Res214" novelty="None" type="Res"/><text>These user profiles cause lower variance for the majority of algorithms which reflects the decreased contention in the network.</text></s>
<s sid="460"><CoreSc1 advantage="None" conceptID="Res215" novelty="None" type="Res"/><text>We observe that CafRep has lower delays than all other algorithms excluding epidemic for these profiles.</text></s>
<s sid="461"><CoreSc1 advantage="None" conceptID="Res216" novelty="None" type="Res"/><text>RR [38] is the exception to the reduced variance, as it displays high delay variance and much larger delays than other algorithms.</text></s>
<s sid="462"><CoreSc1 advantage="None" conceptID="Res217" novelty="None" type="Res"/><text>This is because RR [38] assumes that congestion is uniformly spread and do not identify congesting regions in the network, which occur more frequently when traffic patterns are less uniform.</text></s>
<s sid="463"><CoreSc1 advantage="None" conceptID="Res218" novelty="None" type="Res"/><text>As the message sending rates intensify the probability of a node having generated a message for an encountered destination increases, as a result message delays are consistently lower in comparison to the less active profiles.</text></s>
<s sid="464"><CoreSc1 advantage="None" conceptID="Res219" novelty="None" type="Res"/><text>The increased traffic demands from these profiles lead to a higher level of contention in the network, which results in a higher variance in delays.</text></s>
<s sid="465"><CoreSc1 advantage="None" conceptID="Res220" novelty="None" type="Res"/><text>This is best illustrated by the Direct Delivery [49] results that show significantly reduced delays and increased contention.</text></s>
<s sid="466"><CoreSc1 advantage="None" conceptID="Res221" novelty="None" type="Res"/><text>We also observe that in the high traffic experiments CafRep even outperforms Epidemic [50].</text></s>
<s sid="467"><CoreSc1 advantage="None" conceptID="Res222" novelty="None" type="Res"/><text>This best illustrates the benefits CafRep offers by alleviating contention in the network through the use of multi-path forwarding.</text></s>
<s sid="468"><CoreSc1 advantage="None" conceptID="Res223" novelty="None" type="Res"/><text>Our results show that in the mixed traffic profile experiments delays experienced are between the low and high traffic profiles, but the degree of variance is the highest of all three experiments.</text></s>
<s sid="469"><CoreSc1 advantage="None" conceptID="Con77" novelty="None" type="Con"/><text>This is due to the heterogeneity of the user activity, which leads to volatile traffic demands.</text></s>
<s sid="470"><CoreSc1 advantage="None" conceptID="Con78" novelty="None" type="Con"/><text>Despite the challenges presented by these mixed demands CafRep continues to outperform the other algorithms, while RR [38] experiences increased contention due to its assumption of homogeneous user patterns.</text></s>
<s sid="471"><CoreSc1 advantage="None" conceptID="Con79" novelty="None" type="Con"/><text>In Fig. 14b we show the success ratio of CafRep in comparison to DD [49], EPI [50] and RR [38].</text></s>
<s sid="472"><CoreSc1 advantage="None" conceptID="Con80" novelty="None" type="Con"/><text>We observe that CafRep supports real application traffic, as our results for real application traffic are consistent with our previous experiments.</text></s>
<s sid="473"><CoreSc1 advantage="None" conceptID="Res224" novelty="None" type="Res"/><text>CafRep has the highest success ratio in the less active profile experiments, in comparison with mixed and high traffic profiles as the levels of congestion are lower.</text></s>
<s sid="474"><CoreSc1 advantage="None" conceptID="Res225" novelty="None" type="Res"/><text>CafRep's success ratio decreases as the levels of contention increases and success ratio for low traffic profiles is higher than mixed, which is higher than the high traffic profile experiments.</text></s>
<s sid="475"><CoreSc1 advantage="None" conceptID="Res226" novelty="None" type="Res"/><text>However, CafRep always has higher success ratio than all other protocols excluding direct delivery [49], which has 100% success ratio as it only forwards messages directly to the destination nodes.</text></s>
Conclusion and future work
<s sid="476"><CoreSc1 advantage="None" conceptID="Res227" novelty="None" type="Res"/><text>We proposed CafRep that uses a combined local social, buffer and delay metrics for congestion aware message forwarding and replication that maximises message delivery ratio and availability of nodes while minimising latency and packet loss rates at times of increasing congestion levels.</text></s>
<s sid="477"><CoreSc1 advantage="None" conceptID="Res228" novelty="None" type="Res"/><text>At the core of CafRep is a combined relative utility driven heuristic that allows highly adaptive forwarding and replication policies by managing to detect and offload congested parts of the network and adapting the sending/forwarding rates based on resource and contact predictions.</text></s>
<s sid="478"><CoreSc1 advantage="None" conceptID="Obj44" novelty="None" type="Obj"/><text>We empirically investigated a number of weighting models for analysing the impact of different utilities on the CafRep performance.</text></s>
<s sid="479"><CoreSc1 advantage="None" conceptID="Con81" novelty="None" type="Con"/><text>We have done extensive performance analysis of CafRep in three CRAWDAD real connectivity and GPS traces with different mobility and connectivity patterns: Infocom 2006, Sassy and San Francisco Cabs.</text></s>
<s sid="480"><CoreSc1 advantage="None" conceptID="Con82" novelty="None" type="Con"/><text>We show that CafRep outperforms five other state of the art DTN adaptive and non-adaptive routing protocols across the majority of metrics across all the traces.</text></s>
<s sid="481"><CoreSc1 advantage="None" conceptID="Con83" novelty="None" type="Con"/><text>We also show that CafRep maintains performance levels in two application scenarios: publish subscribe constant bit rate podcasting and Facebook traffic application.</text></s>
<s sid="482"><CoreSc1 advantage="None" conceptID="Con84" novelty="None" type="Con"/><text>We believe that CafRep provides a useful generic and highly adaptive congestion control framework suitable for different types of resource constraint DTN application scenarios.</text></s>
<s sid="483"><CoreSc1 advantage="None" conceptID="Obj45" novelty="None" type="Obj"/><text>We also plan to investigate the efficiency of CafRep in the context of more realistic anycast and multicast applications.</text></s>
</BODY>
<OTHER>
Acknowledgement
The work was supported by the Engineering and Physical Sciences Research Council UK (EPSRC) Grant Number EP/D062659/1.

</OTHER>
</PAPER>